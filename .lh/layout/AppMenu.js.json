{
    "sourceFile": "layout/AppMenu.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1736824977522,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1736824983800,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,13 +143,13 @@\n                 {   label: 'Report', \r\n                     icon: 'pi pi-fw pi-chart-bar', \r\n                     to: '/pages/charts' \r\n                 },\r\n-                {\r\n-                    label: 'Setting',\r\n-                    icon: 'pi pi-fw pi-wrench',\r\n-                    to: '/pages/setting'\r\n-                },\r\n+                // {\r\n+                //     label: 'Setting',\r\n+                //     icon: 'pi pi-fw pi-wrench',\r\n+                //     to: '/pages/setting'\r\n+                // },\r\n \r\n             ]\r\n         },\r\n         // {\r\n"
                },
                {
                    "date": 1736825538379,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,11 +59,11 @@\n                     icon: 'pi pi-fw pi-clone',\r\n                     to: '/pages/category'\r\n                 },\r\n                 {\r\n-                    label: 'Satuan',\r\n+                    label: 'Unit',\r\n                     icon: 'pi pi-fw pi-clone',\r\n-                    to: '/pages/merk'\r\n+                    to: '/pages/unit'\r\n                 },\r\n                 {\r\n                     label: 'Products',\r\n                     icon: 'pi pi-fw pi-box',\r\n"
                },
                {
                    "date": 1736904055897,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,219 +1,74 @@\n-import getConfig from 'next/config';\r\n import React, { useContext, useState, useEffect } from 'react';\r\n import AppMenuitem from './AppMenuitem';\r\n import { LayoutContext } from './context/layoutcontext';\r\n import { MenuProvider } from './context/menucontext';\r\n-import Link from 'next/link';\r\n-import Cookies from 'js-cookie';\r\n+import { fetchMerchantData } from './Api'; // Import fungsi fetchMerchantData\r\n \r\n const AppMenu = () => {\r\n-    const { layoutConfig } = useContext(LayoutContext);\r\n-    const contextPath = getConfig().publicRuntimeConfig.contextPath;\r\n-    const [fullName, setFullName] = useState('');\r\n-    const [token, setToken] = useState('');\r\n+    const { layoutConfig } = useContext(LayoutContext); // Mengakses konfigurasi tata letak\r\n+    const [model, setModel] = useState([]); // Menyimpan data menu\r\n+    const [error, setError] = useState(null); // Menangani error\r\n \r\n     useEffect(() => {\r\n-        if (typeof window !== 'undefined') {\r\n-            const storedFullName =  localStorage.getItem('fullName');\r\n-            const token = localStorage.getItem('token');\r\n+        const fullName = localStorage.getItem('fullName') || 'Guest'; // Mendapatkan nama pengguna dari localStorage\r\n \r\n-            if (token) setToken(token);\r\n-            if (storedFullName) {\r\n-                setFullName(storedFullName);\r\n+        const loadMenu = async () => {\r\n+            try {\r\n+                // Panggil fungsi fetchMerchantData dari API\r\n+                const data = await fetchMerchantData();\r\n+\r\n+                // Membentuk struktur menu berdasarkan data API\r\n+                const fetchedItems = data.items || [];\r\n+                setModel([\r\n+                    {\r\n+                        label: `Welcome, ${fullName}!`,\r\n+                        items: [\r\n+                            {\r\n+                                label: 'Dashboard',\r\n+                                icon: 'pi pi-fw pi-home',\r\n+                                to: '/accounts/tap/d/for/desk',\r\n+                                query: { switcher_access: localStorage.getItem('token') }\r\n+                            }\r\n+                        ]\r\n+                    },\r\n+                    {\r\n+                        label: 'Pages',\r\n+                        icon: 'pi pi-fw pi-briefcase',\r\n+                        items: fetchedItems.map((item) => ({\r\n+                            label: item.label,\r\n+                            icon: item.icon,\r\n+                            to: item.to\r\n+                        }))\r\n+                    }\r\n+                ]);\r\n+            } catch (err) {\r\n+                setError(`Failed to load menu: ${err.message}`);\r\n+                console.error('Error loading menu:', err);\r\n             }\r\n-        }\r\n+        };\r\n+\r\n+        loadMenu();\r\n     }, []);\r\n-    \r\n-    const model = [\r\n-        {\r\n-            label: `Welcome, ${fullName}!`,\r\n-            items: [{ \r\n-                label: 'Dashboard', \r\n-                icon: 'pi pi-fw pi-home', \r\n-                to: '/accounts/tap/d/for/desk', \r\n-                query: { switcher_access: token }\r\n-            }],            \r\n-        },\r\n-        {\r\n-            label: 'Pages',\r\n-            icon: 'pi pi-fw pi-briefcase',\r\n-            to: '/pages',\r\n-            items: [\r\n-                {\r\n-                    label: 'Merchant',\r\n-                    icon: 'pi pi-fw pi-id-card',\r\n-                    to: '/pages/merchant'\r\n-                },\r\n-                {\r\n-                    label: 'User Account',\r\n-                    icon: 'pi pi-fw pi-user',\r\n-                    to: '/pages/user'\r\n-                },\r\n-                {\r\n-                    label: 'Merk',\r\n-                    icon: 'pi pi-fw pi-clone',\r\n-                    to: '/pages/merk'\r\n-                },\r\n-                {\r\n-                    label: 'Category',\r\n-                    icon: 'pi pi-fw pi-clone',\r\n-                    to: '/pages/category'\r\n-                },\r\n-                {\r\n-                    label: 'Unit',\r\n-                    icon: 'pi pi-fw pi-clone',\r\n-                    to: '/pages/unit'\r\n-                },\r\n-                {\r\n-                    label: 'Products',\r\n-                    icon: 'pi pi-fw pi-box',\r\n-                    to: '/pages/inventory'\r\n-                },\r\n-                {\r\n-                    label: 'Discounts',\r\n-                    icon: 'pi pi-fw pi-eraser',\r\n-                    to: '/pages/discount'\r\n-                },\r\n-                {\r\n-                    label: 'Tax/Pajak',\r\n-                    icon: 'pi pi-fw pi-percentage',\r\n-                    to: '/pages/tax'\r\n-                },\r\n-                // {\r\n-                //     label: 'Landing',\r\n-                //     icon: 'pi pi-fw pi-globe',\r\n-                //     to: '/landing'\r\n-                // },\r\n-                // ////{\r\n-                //     label: 'Auth',\r\n-                //     icon: 'pi pi-fw pi-user',\r\n-                //     items: [\r\n-                //         {\r\n-                //             label: 'Permision',\r\n-                //             icon: 'pi pi-fw pi-sign-in',\r\n-                //             to: '/auth/login'\r\n-                //         },\r\n-                //         {\r\n-                //             label: 'Role',\r\n-                //             icon: 'pi pi-fw pi-sitemap',\r\n-                //             to: '/auth/error'\r\n-                //         }\r\n-                //     ]\r\n-                // ////},\r\n-                // {\r\n-                //     label: 'Attendance',\r\n-                //     icon: 'pi pi-fw pi-calendar',\r\n-                //     to: '/pages/attendance'\r\n-                // },\r\n-                // ///{\r\n-                //     label: 'Ticket',\r\n-                //     icon: 'pi pi-fw pi-pencil',\r\n-                //     to: '/pages/ticket'\r\n-                // },                \r\n-                // {\r\n-                //     label: 'Job',\r\n-                //     icon: 'pi pi-fw pi-file',\r\n-                //     to: '/pages/job'\r\n-                // },\r\n-                // {\r\n-                //     label: 'Timeline',\r\n-                //     icon: 'pi pi-fw pi-calendar',\r\n-                //     to: '/pages/timeline'\r\n-                // },\r\n-                // {\r\n-                //     label: 'Not Found',\r\n-                //     icon: 'pi pi-fw pi-exclamation-circle',\r\n-                //     to: '/pages/notfound'\r\n-                // },\r\n-                // {\r\n-                //     label: 'Empty',\r\n-                //     icon: 'pi pi-fw pi-circle-off',\r\n-                //     to: '/pages/empty'\r\n-                // },\r\n-                {\r\n-                    label: 'Package',\r\n-                    icon: 'pi pi-fw pi-circle-off',\r\n-                    to: '/pages/package'\r\n-                },\r\n-                {\r\n-                    label: 'Reservation',\r\n-                    icon: 'pi pi-fw pi-flag-fill',\r\n-                    to: '/pages/table'\r\n-                },\r\n-                {   label: 'Report', \r\n-                    icon: 'pi pi-fw pi-chart-bar', \r\n-                    to: '/pages/charts' \r\n-                },\r\n-                // {\r\n-                //     label: 'Setting',\r\n-                //     icon: 'pi pi-fw pi-wrench',\r\n-                //     to: '/pages/setting'\r\n-                // },\r\n \r\n-            ]\r\n-        },\r\n-        // {\r\n-        //     label: 'UI Components',\r\n-        //     items: [\r\n-        //         { label: 'Form Layout', icon: 'pi pi-fw pi-id-card', to: '/uikit/formlayout' },\r\n-        //         { label: 'Input', icon: 'pi pi-fw pi-check-square', to: '/uikit/input' },\r\n-        //         { label: 'Float Label', icon: 'pi pi-fw pi-bookmark', to: '/uikit/floatlabel' },\r\n-        //         { label: 'Invalid State', icon: 'pi pi-fw pi-exclamation-circle', to: '/uikit/invalidstate' },\r\n-        //         { label: 'Button', icon: 'pi pi-fw pi-mobile', to: '/uikit/button', class: 'rotated-icon' },\r\n-        //         { label: 'Table', icon: 'pi pi-fw pi-table', to: '/uikit/table' },\r\n-        //         { label: 'List', icon: 'pi pi-fw pi-list', to: '/uikit/list' },\r\n-        //         { label: 'Tree', icon: 'pi pi-fw pi-share-alt', to: '/uikit/tree' },\r\n-        //         { label: 'Panel', icon: 'pi pi-fw pi-tablet', to: '/uikit/panel' },\r\n-        //         { label: 'Overlay', icon: 'pi pi-fw pi-clone', to: '/uikit/overlay' },\r\n-        //         { label: 'Media', icon: 'pi pi-fw pi-image', to: '/uikit/media' },\r\n-        //         { label: 'Menu', icon: 'pi pi-fw pi-bars', to: '/uikit/menu', preventExact: true },\r\n-        //         { label: 'Message', icon: 'pi pi-fw pi-comment', to: '/uikit/message' },\r\n-        //         { label: 'File', icon: 'pi pi-fw pi-file', to: '/uikit/file' },\r\n-        //         { label: 'Chart', icon: 'pi pi-fw pi-chart-bar', to: '/uikit/charts' },\r\n-        //         { label: 'Misc', icon: 'pi pi-fw pi-circle', to: '/uikit/misc' }\r\n-        //     ]\r\n-        // },\r\n-        // {\r\n-        //     label: 'Utilities',\r\n-        //     items: [\r\n-        //         { label: 'PrimeIcons', icon: 'pi pi-fw pi-prime', to: '/utilities/icons' },\r\n-        //     ]\r\n-        // },\r\n-     \r\n-      \r\n-        // {\r\n-        //     label: 'Get Started',\r\n-        //     items: [\r\n-        //         {\r\n-        //             label: 'Documentation',\r\n-        //             icon: 'pi pi-fw pi-question',\r\n-        //             to: '/documentation'\r\n-        //         },\r\n-        //         {\r\n-        //             label: 'View Source',\r\n-        //             icon: 'pi pi-fw pi-search',\r\n-        //             url: 'https://github.com/primefaces/sakai-react',\r\n-        //             target: '_blank'\r\n-        //         }\r\n-        //     ]\r\n-        // }\r\n-    ];\r\n+    // Menampilkan pesan error jika terjadi kesalahan\r\n+    if (error) {\r\n+        return (\r\n+            <div className=\"error\">\r\n+                <p>{error}</p>\r\n+            </div>\r\n+        );\r\n+    }\r\n \r\n+    // Render menu\r\n     return (\r\n         <MenuProvider>\r\n             <ul className=\"layout-menu\">\r\n-                {model.map((item, i) => {\r\n-                    return !item.seperator ? <AppMenuitem item={item} root={true} index={i} key={item.label} /> : <li className=\"menu-separator\"></li>;\r\n-                })}\r\n-\r\n-                {/* <Link href=\"https://www.primefaces.org/primeblocks-react\">\r\n-                    <a target=\"_blank\" style={{ cursor: 'pointer' }}>\r\n-                        <img alt=\"Prime Blocks\" className=\"w-full mt-3\" src={`${contextPath}/layout/images/banner-primeblocks${layoutConfig.colorScheme === 'light' ? '' : '-dark'}.png`} />\r\n-                    </a>\r\n-                </Link> */}\r\n+                {model.map((item, index) => (\r\n+                    <AppMenuitem item={item} root={true} index={index} key={item.label} />\r\n+                ))}\r\n             </ul>\r\n         </MenuProvider>\r\n     );\r\n };\r\n \r\n-export default AppMenu;\r\n+export default AppMenu;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1736918500767,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,24 +1,24 @@\n import React, { useContext, useState, useEffect } from 'react';\r\n-import AppMenuitem from './AppMenuitem';\r\n-import { LayoutContext } from './context/layoutcontext';\r\n-import { MenuProvider } from './context/menucontext';\r\n-import { fetchMerchantData } from './Api'; // Import fungsi fetchMerchantData\r\n+import AppMenuitem from './AppMenuitem'; // Komponen menu item\r\n+import { LayoutContext } from './context/layoutcontext'; // Konteks tata letak\r\n+import { MenuProvider } from './context/menucontext'; // Konteks menu\r\n+import { fetchMerchantData } from './Api'; // Fungsi fetch data dari API\r\n \r\n const AppMenu = () => {\r\n-    const { layoutConfig } = useContext(LayoutContext); // Mengakses konfigurasi tata letak\r\n-    const [model, setModel] = useState([]); // Menyimpan data menu\r\n-    const [error, setError] = useState(null); // Menangani error\r\n+    const { layoutConfig } = useContext(LayoutContext); // Konfigurasi tata letak\r\n+    const [model, setModel] = useState([]); // Data menu\r\n+    const [error, setError] = useState(null); // Pesan error\r\n \r\n     useEffect(() => {\r\n-        const fullName = localStorage.getItem('fullName') || 'Guest'; // Mendapatkan nama pengguna dari localStorage\r\n+        const fullName = localStorage.getItem('fullName') || 'Guest'; // Nama pengguna\r\n \r\n         const loadMenu = async () => {\r\n             try {\r\n-                // Panggil fungsi fetchMerchantData dari API\r\n+                // Panggil API untuk mendapatkan data menu\r\n                 const data = await fetchMerchantData();\r\n \r\n-                // Membentuk struktur menu berdasarkan data API\r\n+                // Bentuk model menu berdasarkan data API\r\n                 const fetchedItems = data.items || [];\r\n                 setModel([\r\n                     {\r\n                         label: `Welcome, ${fullName}!`,\r\n@@ -26,21 +26,21 @@\n                             {\r\n                                 label: 'Dashboard',\r\n                                 icon: 'pi pi-fw pi-home',\r\n                                 to: '/accounts/tap/d/for/desk',\r\n-                                query: { switcher_access: localStorage.getItem('token') }\r\n-                            }\r\n-                        ]\r\n+                                query: { switcher_access: localStorage.getItem('token') },\r\n+                            },\r\n+                        ],\r\n                     },\r\n                     {\r\n                         label: 'Pages',\r\n                         icon: 'pi pi-fw pi-briefcase',\r\n                         items: fetchedItems.map((item) => ({\r\n                             label: item.label,\r\n                             icon: item.icon,\r\n-                            to: item.to\r\n-                        }))\r\n-                    }\r\n+                            to: item.to,\r\n+                        })),\r\n+                    },\r\n                 ]);\r\n             } catch (err) {\r\n                 setError(`Failed to load menu: ${err.message}`);\r\n                 console.error('Error loading menu:', err);\r\n@@ -49,9 +49,9 @@\n \r\n         loadMenu();\r\n     }, []);\r\n \r\n-    // Menampilkan pesan error jika terjadi kesalahan\r\n+    // Render pesan error jika terjadi kesalahan\r\n     if (error) {\r\n         return (\r\n             <div className=\"error\">\r\n                 <p>{error}</p>\r\n@@ -70,5 +70,5 @@\n         </MenuProvider>\r\n     );\r\n };\r\n \r\n-export default AppMenu;\n\\ No newline at end of file\n+export default AppMenu;\r\n"
                },
                {
                    "date": 1736918633465,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n import { fetchMerchantData } from './Api'; // Fungsi fetch data dari API\r\n \r\n const AppMenu = () => {\r\n     const { layoutConfig } = useContext(LayoutContext); // Konfigurasi tata letak\r\n-    const [model, setModel] = useState([]); // Data menu\r\n+    const [menuModel, setMenuModel] = useState([]); // Data menu\r\n     const [error, setError] = useState(null); // Pesan error\r\n \r\n     useEffect(() => {\r\n         const fullName = localStorage.getItem('fullName') || 'Guest'; // Nama pengguna\r\n@@ -16,32 +16,24 @@\n             try {\r\n                 // Panggil API untuk mendapatkan data menu\r\n                 const data = await fetchMerchantData();\r\n \r\n-                // Bentuk model menu berdasarkan data API\r\n-                const fetchedItems = data.items || [];\r\n-                setModel([\r\n+                // Bentuk menu langsung dari data API\r\n+                const menuData = [\r\n                     {\r\n                         label: `Welcome, ${fullName}!`,\r\n-                        items: [\r\n-                            {\r\n-                                label: 'Dashboard',\r\n-                                icon: 'pi pi-fw pi-home',\r\n-                                to: '/accounts/tap/d/for/desk',\r\n-                                query: { switcher_access: localStorage.getItem('token') },\r\n-                            },\r\n-                        ],\r\n+                        icon: null,\r\n+                        to: null,\r\n                     },\r\n                     {\r\n-                        label: 'Pages',\r\n-                        icon: 'pi pi-fw pi-briefcase',\r\n-                        items: fetchedItems.map((item) => ({\r\n-                            label: item.label,\r\n-                            icon: item.icon,\r\n-                            to: item.to,\r\n-                        })),\r\n+                        label: 'Dashboard',\r\n+                        icon: 'pi pi-fw pi-home',\r\n+                        to: '/accounts/tap/d/for/desk',\r\n                     },\r\n-                ]);\r\n+                    ...data, // Langsung masukkan respons API\r\n+                ];\r\n+\r\n+                setMenuModel(menuData);\r\n             } catch (err) {\r\n                 setError(`Failed to load menu: ${err.message}`);\r\n                 console.error('Error loading menu:', err);\r\n             }\r\n@@ -62,9 +54,9 @@\n     // Render menu\r\n     return (\r\n         <MenuProvider>\r\n             <ul className=\"layout-menu\">\r\n-                {model.map((item, index) => (\r\n+                {menuModel.map((item, index) => (\r\n                     <AppMenuitem item={item} root={true} index={index} key={item.label} />\r\n                 ))}\r\n             </ul>\r\n         </MenuProvider>\r\n"
                },
                {
                    "date": 1736919396507,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n import { fetchMerchantData } from './Api'; // Fungsi fetch data dari API\r\n \r\n const AppMenu = () => {\r\n     const { layoutConfig } = useContext(LayoutContext); // Konfigurasi tata letak\r\n-    const [menuModel, setMenuModel] = useState([]); // Data menu\r\n+    const [model, setModel] = useState([]); // Data menu\r\n     const [error, setError] = useState(null); // Pesan error\r\n \r\n     useEffect(() => {\r\n         const fullName = localStorage.getItem('fullName') || 'Guest'; // Nama pengguna\r\n@@ -16,24 +16,32 @@\n             try {\r\n                 // Panggil API untuk mendapatkan data menu\r\n                 const data = await fetchMerchantData();\r\n \r\n-                // Bentuk menu langsung dari data API\r\n-                const menuData = [\r\n+                // Bentuk model menu berdasarkan data API\r\n+                const fetchedItems = data.items || [];\r\n+                setModel([\r\n                     {\r\n                         label: `Welcome, ${fullName}!`,\r\n-                        icon: null,\r\n-                        to: null,\r\n+                        items: [\r\n+                            {\r\n+                                label: 'Dashboard',\r\n+                                icon: 'pi pi-fw pi-home',\r\n+                                to: '/accounts/tap/d/for/desk',\r\n+                                query: { switcher_access: localStorage.getItem('token') },\r\n+                            },\r\n+                        ],\r\n                     },\r\n                     {\r\n-                        label: 'Dashboard',\r\n-                        icon: 'pi pi-fw pi-home',\r\n-                        to: '/accounts/tap/d/for/desk',\r\n+                        label: 'Pages',\r\n+                        icon: 'pi pi-fw pi-briefcase',\r\n+                        items: fetchedItems.map((item) => ({\r\n+                            label: item.label,\r\n+                            icon: item.icon,\r\n+                            to: item.to,\r\n+                        })),\r\n                     },\r\n-                    ...data, // Langsung masukkan respons API\r\n-                ];\r\n-\r\n-                setMenuModel(menuData);\r\n+                ]);\r\n             } catch (err) {\r\n                 setError(`Failed to load menu: ${err.message}`);\r\n                 console.error('Error loading menu:', err);\r\n             }\r\n@@ -54,9 +62,9 @@\n     // Render menu\r\n     return (\r\n         <MenuProvider>\r\n             <ul className=\"layout-menu\">\r\n-                {menuModel.map((item, index) => (\r\n+                {model.map((item, index) => (\r\n                     <AppMenuitem item={item} root={true} index={index} key={item.label} />\r\n                 ))}\r\n             </ul>\r\n         </MenuProvider>\r\n"
                },
                {
                    "date": 1736919426351,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,24 +1,24 @@\n import React, { useContext, useState, useEffect } from 'react';\r\n-import AppMenuitem from './AppMenuitem'; // Komponen menu item\r\n-import { LayoutContext } from './context/layoutcontext'; // Konteks tata letak\r\n-import { MenuProvider } from './context/menucontext'; // Konteks menu\r\n-import { fetchMerchantData } from './Api'; // Fungsi fetch data dari API\r\n+import AppMenuitem from './AppMenuitem';\r\n+import { LayoutContext } from './context/layoutcontext';\r\n+import { MenuProvider } from './context/menucontext';\r\n+import { fetchMerchantData } from './Api'; // Import fungsi fetchMerchantData\r\n \r\n const AppMenu = () => {\r\n-    const { layoutConfig } = useContext(LayoutContext); // Konfigurasi tata letak\r\n-    const [model, setModel] = useState([]); // Data menu\r\n-    const [error, setError] = useState(null); // Pesan error\r\n+    const { layoutConfig } = useContext(LayoutContext); // Mengakses konfigurasi tata letak\r\n+    const [model, setModel] = useState([]); // Menyimpan data menu\r\n+    const [error, setError] = useState(null); // Menangani error\r\n \r\n     useEffect(() => {\r\n-        const fullName = localStorage.getItem('fullName') || 'Guest'; // Nama pengguna\r\n+        const fullName = localStorage.getItem('fullName') || 'Guest'; // Mendapatkan nama pengguna dari localStorage\r\n \r\n         const loadMenu = async () => {\r\n             try {\r\n-                // Panggil API untuk mendapatkan data menu\r\n+                // Panggil fungsi fetchMerchantData dari API\r\n                 const data = await fetchMerchantData();\r\n \r\n-                // Bentuk model menu berdasarkan data API\r\n+                // Membentuk struktur menu berdasarkan data API\r\n                 const fetchedItems = data.items || [];\r\n                 setModel([\r\n                     {\r\n                         label: `Welcome, ${fullName}!`,\r\n@@ -26,21 +26,21 @@\n                             {\r\n                                 label: 'Dashboard',\r\n                                 icon: 'pi pi-fw pi-home',\r\n                                 to: '/accounts/tap/d/for/desk',\r\n-                                query: { switcher_access: localStorage.getItem('token') },\r\n-                            },\r\n-                        ],\r\n+                                query: { switcher_access: localStorage.getItem('token') }\r\n+                            }\r\n+                        ]\r\n                     },\r\n                     {\r\n                         label: 'Pages',\r\n                         icon: 'pi pi-fw pi-briefcase',\r\n                         items: fetchedItems.map((item) => ({\r\n                             label: item.label,\r\n                             icon: item.icon,\r\n-                            to: item.to,\r\n-                        })),\r\n-                    },\r\n+                            to: item.to\r\n+                        }))\r\n+                    }\r\n                 ]);\r\n             } catch (err) {\r\n                 setError(`Failed to load menu: ${err.message}`);\r\n                 console.error('Error loading menu:', err);\r\n@@ -49,9 +49,9 @@\n \r\n         loadMenu();\r\n     }, []);\r\n \r\n-    // Render pesan error jika terjadi kesalahan\r\n+    // Menampilkan pesan error jika terjadi kesalahan\r\n     if (error) {\r\n         return (\r\n             <div className=\"error\">\r\n                 <p>{error}</p>\r\n@@ -71,4 +71,5 @@\n     );\r\n };\r\n \r\n export default AppMenu;\r\n+\r\n"
                },
                {
                    "date": 1736919493113,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n             try {\r\n                 // Panggil fungsi fetchMerchantData dari API\r\n                 const data = await fetchMerchantData();\r\n \r\n-                // Membentuk struktur menu berdasarkan data API\r\n+                // Pastikan bahwa data yang diterima sesuai dengan format yang diinginkan\r\n                 const fetchedItems = data.items || [];\r\n                 setModel([\r\n                     {\r\n                         label: `Welcome, ${fullName}!`,\r\n@@ -71,5 +71,4 @@\n     );\r\n };\r\n \r\n export default AppMenu;\r\n-\r\n"
                },
                {
                    "date": 1736922644466,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,14 @@\n                                 label: 'Dashboard',\r\n                                 icon: 'pi pi-fw pi-home',\r\n                                 to: '/accounts/tap/d/for/desk',\r\n                                 query: { switcher_access: localStorage.getItem('token') }\r\n+                            },\r\n+                            {\r\n+                                label: 'Roles',\r\n+                                icon: 'pi pi-fw pi-home',\r\n+                                to: '/pages/role',\r\n+                                query: { switcher_access: localStorage.getItem('token') }\r\n                             }\r\n                         ]\r\n                     },\r\n                     {\r\n"
                },
                {
                    "date": 1736923143140,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,8 +33,14 @@\n                                 label: 'Roles',\r\n                                 icon: 'pi pi-fw pi-home',\r\n                                 to: '/pages/role',\r\n                                 query: { switcher_access: localStorage.getItem('token') }\r\n+                            },\r\n+                            {\r\n+                                label: 'Permissions',\r\n+                                icon: 'pi pi-fw pi-home',\r\n+                                to: '/pages/permission',\r\n+                                query: { switcher_access: localStorage.getItem('token') }\r\n                             }\r\n                         ]\r\n                     },\r\n                     {\r\n"
                }
            ],
            "date": 1736824977522,
            "name": "Commit-0",
            "content": "import getConfig from 'next/config';\r\nimport React, { useContext, useState, useEffect } from 'react';\r\nimport AppMenuitem from './AppMenuitem';\r\nimport { LayoutContext } from './context/layoutcontext';\r\nimport { MenuProvider } from './context/menucontext';\r\nimport Link from 'next/link';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst AppMenu = () => {\r\n    const { layoutConfig } = useContext(LayoutContext);\r\n    const contextPath = getConfig().publicRuntimeConfig.contextPath;\r\n    const [fullName, setFullName] = useState('');\r\n    const [token, setToken] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (typeof window !== 'undefined') {\r\n            const storedFullName =  localStorage.getItem('fullName');\r\n            const token = localStorage.getItem('token');\r\n\r\n            if (token) setToken(token);\r\n            if (storedFullName) {\r\n                setFullName(storedFullName);\r\n            }\r\n        }\r\n    }, []);\r\n    \r\n    const model = [\r\n        {\r\n            label: `Welcome, ${fullName}!`,\r\n            items: [{ \r\n                label: 'Dashboard', \r\n                icon: 'pi pi-fw pi-home', \r\n                to: '/accounts/tap/d/for/desk', \r\n                query: { switcher_access: token }\r\n            }],            \r\n        },\r\n        {\r\n            label: 'Pages',\r\n            icon: 'pi pi-fw pi-briefcase',\r\n            to: '/pages',\r\n            items: [\r\n                {\r\n                    label: 'Merchant',\r\n                    icon: 'pi pi-fw pi-id-card',\r\n                    to: '/pages/merchant'\r\n                },\r\n                {\r\n                    label: 'User Account',\r\n                    icon: 'pi pi-fw pi-user',\r\n                    to: '/pages/user'\r\n                },\r\n                {\r\n                    label: 'Merk',\r\n                    icon: 'pi pi-fw pi-clone',\r\n                    to: '/pages/merk'\r\n                },\r\n                {\r\n                    label: 'Category',\r\n                    icon: 'pi pi-fw pi-clone',\r\n                    to: '/pages/category'\r\n                },\r\n                {\r\n                    label: 'Satuan',\r\n                    icon: 'pi pi-fw pi-clone',\r\n                    to: '/pages/merk'\r\n                },\r\n                {\r\n                    label: 'Products',\r\n                    icon: 'pi pi-fw pi-box',\r\n                    to: '/pages/inventory'\r\n                },\r\n                {\r\n                    label: 'Discounts',\r\n                    icon: 'pi pi-fw pi-eraser',\r\n                    to: '/pages/discount'\r\n                },\r\n                {\r\n                    label: 'Tax/Pajak',\r\n                    icon: 'pi pi-fw pi-percentage',\r\n                    to: '/pages/tax'\r\n                },\r\n                // {\r\n                //     label: 'Landing',\r\n                //     icon: 'pi pi-fw pi-globe',\r\n                //     to: '/landing'\r\n                // },\r\n                // ////{\r\n                //     label: 'Auth',\r\n                //     icon: 'pi pi-fw pi-user',\r\n                //     items: [\r\n                //         {\r\n                //             label: 'Permision',\r\n                //             icon: 'pi pi-fw pi-sign-in',\r\n                //             to: '/auth/login'\r\n                //         },\r\n                //         {\r\n                //             label: 'Role',\r\n                //             icon: 'pi pi-fw pi-sitemap',\r\n                //             to: '/auth/error'\r\n                //         }\r\n                //     ]\r\n                // ////},\r\n                // {\r\n                //     label: 'Attendance',\r\n                //     icon: 'pi pi-fw pi-calendar',\r\n                //     to: '/pages/attendance'\r\n                // },\r\n                // ///{\r\n                //     label: 'Ticket',\r\n                //     icon: 'pi pi-fw pi-pencil',\r\n                //     to: '/pages/ticket'\r\n                // },                \r\n                // {\r\n                //     label: 'Job',\r\n                //     icon: 'pi pi-fw pi-file',\r\n                //     to: '/pages/job'\r\n                // },\r\n                // {\r\n                //     label: 'Timeline',\r\n                //     icon: 'pi pi-fw pi-calendar',\r\n                //     to: '/pages/timeline'\r\n                // },\r\n                // {\r\n                //     label: 'Not Found',\r\n                //     icon: 'pi pi-fw pi-exclamation-circle',\r\n                //     to: '/pages/notfound'\r\n                // },\r\n                // {\r\n                //     label: 'Empty',\r\n                //     icon: 'pi pi-fw pi-circle-off',\r\n                //     to: '/pages/empty'\r\n                // },\r\n                {\r\n                    label: 'Package',\r\n                    icon: 'pi pi-fw pi-circle-off',\r\n                    to: '/pages/package'\r\n                },\r\n                {\r\n                    label: 'Reservation',\r\n                    icon: 'pi pi-fw pi-flag-fill',\r\n                    to: '/pages/table'\r\n                },\r\n                {   label: 'Report', \r\n                    icon: 'pi pi-fw pi-chart-bar', \r\n                    to: '/pages/charts' \r\n                },\r\n                {\r\n                    label: 'Setting',\r\n                    icon: 'pi pi-fw pi-wrench',\r\n                    to: '/pages/setting'\r\n                },\r\n\r\n            ]\r\n        },\r\n        // {\r\n        //     label: 'UI Components',\r\n        //     items: [\r\n        //         { label: 'Form Layout', icon: 'pi pi-fw pi-id-card', to: '/uikit/formlayout' },\r\n        //         { label: 'Input', icon: 'pi pi-fw pi-check-square', to: '/uikit/input' },\r\n        //         { label: 'Float Label', icon: 'pi pi-fw pi-bookmark', to: '/uikit/floatlabel' },\r\n        //         { label: 'Invalid State', icon: 'pi pi-fw pi-exclamation-circle', to: '/uikit/invalidstate' },\r\n        //         { label: 'Button', icon: 'pi pi-fw pi-mobile', to: '/uikit/button', class: 'rotated-icon' },\r\n        //         { label: 'Table', icon: 'pi pi-fw pi-table', to: '/uikit/table' },\r\n        //         { label: 'List', icon: 'pi pi-fw pi-list', to: '/uikit/list' },\r\n        //         { label: 'Tree', icon: 'pi pi-fw pi-share-alt', to: '/uikit/tree' },\r\n        //         { label: 'Panel', icon: 'pi pi-fw pi-tablet', to: '/uikit/panel' },\r\n        //         { label: 'Overlay', icon: 'pi pi-fw pi-clone', to: '/uikit/overlay' },\r\n        //         { label: 'Media', icon: 'pi pi-fw pi-image', to: '/uikit/media' },\r\n        //         { label: 'Menu', icon: 'pi pi-fw pi-bars', to: '/uikit/menu', preventExact: true },\r\n        //         { label: 'Message', icon: 'pi pi-fw pi-comment', to: '/uikit/message' },\r\n        //         { label: 'File', icon: 'pi pi-fw pi-file', to: '/uikit/file' },\r\n        //         { label: 'Chart', icon: 'pi pi-fw pi-chart-bar', to: '/uikit/charts' },\r\n        //         { label: 'Misc', icon: 'pi pi-fw pi-circle', to: '/uikit/misc' }\r\n        //     ]\r\n        // },\r\n        // {\r\n        //     label: 'Utilities',\r\n        //     items: [\r\n        //         { label: 'PrimeIcons', icon: 'pi pi-fw pi-prime', to: '/utilities/icons' },\r\n        //     ]\r\n        // },\r\n     \r\n      \r\n        // {\r\n        //     label: 'Get Started',\r\n        //     items: [\r\n        //         {\r\n        //             label: 'Documentation',\r\n        //             icon: 'pi pi-fw pi-question',\r\n        //             to: '/documentation'\r\n        //         },\r\n        //         {\r\n        //             label: 'View Source',\r\n        //             icon: 'pi pi-fw pi-search',\r\n        //             url: 'https://github.com/primefaces/sakai-react',\r\n        //             target: '_blank'\r\n        //         }\r\n        //     ]\r\n        // }\r\n    ];\r\n\r\n    return (\r\n        <MenuProvider>\r\n            <ul className=\"layout-menu\">\r\n                {model.map((item, i) => {\r\n                    return !item.seperator ? <AppMenuitem item={item} root={true} index={i} key={item.label} /> : <li className=\"menu-separator\"></li>;\r\n                })}\r\n\r\n                {/* <Link href=\"https://www.primefaces.org/primeblocks-react\">\r\n                    <a target=\"_blank\" style={{ cursor: 'pointer' }}>\r\n                        <img alt=\"Prime Blocks\" className=\"w-full mt-3\" src={`${contextPath}/layout/images/banner-primeblocks${layoutConfig.colorScheme === 'light' ? '' : '-dark'}.png`} />\r\n                    </a>\r\n                </Link> */}\r\n            </ul>\r\n        </MenuProvider>\r\n    );\r\n};\r\n\r\nexport default AppMenu;\r\n"
        }
    ]
}