{
    "sourceFile": "pages/accounts/tap/login.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1736741923717,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1736741923717,
            "name": "Commit-0",
            "content": "import { Toast } from 'primereact/toast';\r\nimport { useRouter } from 'next/router';\r\nimport React, { useState, useRef,useEffect } from 'react';\r\nimport { Checkbox } from 'primereact/checkbox';\r\nimport { Button } from 'primereact/button';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Password } from 'primereact/password';\r\nimport { classNames } from 'primereact/utils';\r\nimport Cookies from 'js-cookie';\r\nimport axios from 'axios';\r\nimport Link from 'next/link';\r\n\r\nconst LoginPage = () => {\r\n    const toast = useRef(null);\r\n    const [loginMethod, setLoginMethod] = useState('whatsapp'); // Default login method (whatsapp or email)\r\n    const [countryCode, setCountryCode] = useState('+62'); // Default +62\r\n    const [whatsapp, setWhatsapp] = useState('');\r\n    const [email, setEmail] = useState(''); // Add state for email\r\n    const [password, setPassword] = useState('');\r\n    const [checked, setChecked] = useState(false);\r\n    const [notification, setNotification] = useState({\r\n        type: '',\r\n        message: ''\r\n    });\r\n    const router = useRouter();\r\n\r\n    useEffect(() => {\r\n        if (Cookies.get('token')) {\r\n            router.push('./d/for/desk');\r\n        }\r\n    }, []);\r\n\r\n    const formatWhatsappNumber = (value) => {\r\n        let cleaned = value.replace(/\\D/g, '');\r\n        if (cleaned.length > 0 && cleaned[0] !== '8') {\r\n            cleaned = '8' + cleaned;\r\n        }\r\n        let formatted = cleaned;\r\n        if (cleaned.length > 3) {\r\n            formatted = `${cleaned.slice(0, 3)}-${cleaned.slice(3, 7)}`;\r\n        }\r\n        if (cleaned.length > 7) {\r\n            formatted = `${cleaned.slice(0, 3)}-${cleaned.slice(3, 7)}-${cleaned.slice(7, 11)}`;\r\n        }\r\n        return formatted;\r\n    };\r\n\r\n    useEffect(() => {\r\n        setWhatsapp(formatWhatsappNumber(whatsapp));\r\n    }, [whatsapp]);\r\n\r\n    const handleLogin = async () => {\r\n        setNotification({ type: '', message: '' });\r\n\r\n        try {\r\n            // Choose the correct login data based on method\r\n            const loginData = loginMethod === 'whatsapp' ? { whatsapp, password } : { email, password };\r\n            const response = await axios.post('http://192.168.14.248:2356/api/auth/signin', loginData, {\r\n                headers: {\r\n                    'X-Api-Key': '3f=Pr#g1@RU-nw=30'\r\n                }\r\n            });\r\n\r\n            if (response.data.status) {\r\n                const data = response.data.data;\r\n                Cookies.set('token', data.token);\r\n                Cookies.set('refresh_token', data.refresh_token);\r\n                localStorage.setItem('token', data.merchant_id);\r\n                router.push({\r\n                    pathname: './d/for/desk',\r\n                    query: { switcher_access: data.merchant_id }\r\n                });\r\n            } else {\r\n                setNotification({ type: 'error', message: meta.message });\r\n            }\r\n        } catch (error) {\r\n            const errorMessage =\r\n            error.response?.data?.meta?.message;\r\n            toast.current.show({\r\n                severity: 'error',\r\n                summary: 'Error',\r\n                detail: errorMessage,\r\n                life: 5000,\r\n            });\r\n\r\n        }\r\n    };\r\n\r\n    // Cek apakah semua input sudah terisi\r\n    const isFormFilled = () => {\r\n        if (loginMethod === 'whatsapp') {\r\n            return whatsapp && password;\r\n        } else {\r\n            return email && password;\r\n        }\r\n    };\r\n\r\n    const containerClassName = classNames('surface-ground flex align-items-center justify-content-center min-h-screen min-w-screen overflow-hidden');\r\n\r\n    return (\r\n        <div className={containerClassName}>\r\n            <div className=\"flex flex-column align-items-center justify-content-center\">\r\n                <div style={{ borderRadius: '56px', padding: '0.3rem', background: 'linear-gradient(180deg, var(--primary-color) 10%, rgba(33, 150, 243, 0) 30%)' }}>\r\n                    <div className=\"w-full surface-card py-8 px-5 sm:px-8\" style={{ borderRadius: '53px' }}>\r\n                    <Toast ref={toast} />\r\n                        <div className=\"text-center mb-5\">\r\n                            <div className=\"text-900 text-3xl font-medium mb-3\">Sign in to continue!</div>\r\n                            {notification.message && (\r\n                                <div className={notification.type === 'error' ? 'alert alert-danger' : 'alert alert-success'}>\r\n                                    {notification.message}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <div>\r\n                            {/* Add Tabs to switch between WhatsApp and Email */}\r\n                            <div className=\"flex justify-content-center mb-3\">\r\n                                <Button label=\"Login with WhatsApp\" className={`mr-2 ${loginMethod === 'whatsapp' ? 'p-button-primary' : 'p-button-outlined'}`} onClick={() => setLoginMethod('whatsapp')} />\r\n                                <Button label=\"Login with Email\" className={loginMethod === 'email' ? 'p-button-primary' : 'p-button-outlined'} onClick={() => setLoginMethod('email')} />\r\n                            </div>\r\n\r\n                            {loginMethod === 'whatsapp' ? (\r\n                                <div className=\"flex mb-2\">\r\n                                    <InputText\r\n                                        inputid=\"countryCode\"\r\n                                        type=\"text\"\r\n                                        value={countryCode}\r\n                                        onChange={(e) => setCountryCode(e.target.value)}\r\n                                        className=\"mr-2\"\r\n                                        style={{ padding: '1rem', width: '4rem' }}\r\n                                        placeholder='+62'\r\n                                        disabled\r\n                                    />\r\n                                    <InputText\r\n                                        inputid=\"whatsapp1\"\r\n                                        type=\"text\"\r\n                                        value={whatsapp}\r\n                                        onChange={(e) => setWhatsapp(e.target.value)}\r\n                                        className=\"w-full\"\r\n                                        style={{ padding: '1rem' }}\r\n                                        placeholder='Input WhatsApp Number'\r\n                                    />\r\n                                </div>\r\n                            ) : (\r\n                                <div className=\"mb-2\">\r\n                                    <InputText\r\n                                        inputid=\"email\"\r\n                                        type=\"email\"\r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                        className=\"w-full\"\r\n                                        style={{ padding: '1rem' }}\r\n                                        placeholder='Input Email Address'\r\n                                    />\r\n                                </div>\r\n                            )}\r\n\r\n                            {/* Password input will only be shown if email or whatsapp input has been filled */}\r\n                            {(loginMethod === 'whatsapp' && whatsapp.length > 11) || (loginMethod === 'email' && email.length > 0) ? (\r\n                                <div className=\"mb-3\">\r\n                                    <Password id=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"Password\" toggleMask className=\"w-full mb-5\" inputClassName=\"w-full p-3 md:w-24rem\" />\r\n                                </div>\r\n                            ) : null}\r\n\r\n                            <div className=\"flex align-items-center justify-content-between mb-5 gap-5\">\r\n                                <div className=\"flex align-items-center\">\r\n                                    <Checkbox inputid=\"rememberme1\" checked={checked} onChange={(e) => setChecked(e.checked)} className=\"mr-2\" />\r\n                                    <label htmlFor=\"rememberme1\">Remember me</label>\r\n                                </div>\r\n                                <Link href=\"/password/request-forgot-password\">\r\n                                    <a className=\"font-medium no-underline ml-2 text-right cursor-pointer\" style={{ color: 'var(--primary-color)' }}>\r\n                                        Forgot password?\r\n                                    </a>\r\n                                </Link>\r\n                            </div>\r\n\r\n                            <Button label=\"Sign In\" className=\"w-full p-3 text-xl\" onClick={handleLogin} disabled={!isFormFilled()}></Button>\r\n\r\n                            <Link href=\"/accounts/tap/register\">\r\n                                <div style={{ textAlign: 'center', marginTop: '2rem' }}>\r\n                                    You Don't have an account?\r\n                                    <span className=\"font-medium no-underline cursor-pointer\" style={{ color: 'var(--primary-color)' }}>\r\n                                        Register?\r\n                                    </span>\r\n                                </div>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nLoginPage.getLayout = function getLayout(page) {\r\n    return (\r\n        <React.Fragment>\r\n            {page}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default LoginPage;\r\n"
        }
    ]
}