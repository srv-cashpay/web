{
    "sourceFile": "pages/accounts/tap/register.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1736741923716,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1736741923716,
            "name": "Commit-0",
            "content": "import { useRouter } from 'next/router';\r\nimport React, { useContext, useState, useEffect } from 'react';\r\nimport AppConfig from '../../../layout/AppConfig';\r\nimport { Checkbox } from 'primereact/checkbox';\r\nimport { Button } from 'primereact/button';\r\nimport { Password } from 'primereact/password';\r\nimport { LayoutContext } from '../../../layout/context/layoutcontext';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { classNames } from 'primereact/utils';\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\nimport axios from 'axios';\r\nimport Link from 'next/link';\r\n\r\nconst RegisterPage = () => {\r\n    const [full_name, setFullName] = useState('');\r\n    const [countryCode, setCountryCode] = useState('+62');\r\n    const [whatsapp, setWhatsapp] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [checked, setChecked] = useState(false);\r\n    const { layoutConfig } = useContext(LayoutContext);\r\n    const router = useRouter();\r\n    const [isFormValid, setIsFormValid] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false); // State untuk loading\r\n    const [notification, setNotification] = useState({\r\n        type: '', // 'success' or 'error'\r\n        message: ''\r\n    });\r\n\r\n    const formatWhatsappNumber = (value) => {\r\n        let cleaned = value.replace(/\\D/g, '');\r\n        if (cleaned.length > 0 && cleaned[0] !== '8') {\r\n            cleaned = '8' + cleaned;\r\n        }\r\n        let formatted = cleaned;\r\n        if (cleaned.length > 3) {\r\n            formatted = `${cleaned.slice(0, 3)}-${cleaned.slice(3, 7)}`;\r\n        }\r\n        if (cleaned.length > 7) {\r\n            formatted = `${cleaned.slice(0, 3)}-${cleaned.slice(3, 7)}-${cleaned.slice(7, 11)}`;\r\n        }\r\n        return formatted;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const isValid = full_name && whatsapp && email && password;\r\n        setIsFormValid(isValid);\r\n        setWhatsapp(formatWhatsappNumber(whatsapp));\r\n    }, [full_name, whatsapp, email, password]);\r\n\r\n    const handleRegister = async () => {\r\n        setIsLoading(true); // Aktifkan loading saat registrasi dimulai\r\n        try {\r\n            const fullWhatsappNumber = `${countryCode}${whatsapp}`;\r\n            const response = await axios.post('http://192.168.14.248:2356/api/auth/signup', {\r\n                full_name,\r\n                email,\r\n                password,\r\n                whatsapp: fullWhatsappNumber\r\n            }, {\r\n                headers: {\r\n                    'x-api-key': '3f=Pr#g1@RU-nw=30'\r\n                }\r\n            });\r\n\r\n            if (response.status === 200) {\r\n                const data = response.data;\r\n\r\n                // Alihkan ke halaman verifikasi dengan token\r\n                router.push(`/accounts/tap/verify?token=${data.data.token}`);\r\n            } else {\r\n                setNotification({ type: 'error', message: 'Registration failed.' });\r\n            }\r\n        } catch (error) {\r\n            if (error.response) {\r\n                const data = error.response.data;\r\n                setNotification({ type: 'error', message: data.meta.message });\r\n            } else {\r\n                console.error('Error during registration', error);\r\n                setNotification({ type: 'error', message: 'An unexpected error occurred.' });\r\n            }\r\n        } finally {\r\n            setIsLoading(false); // Matikan loading setelah selesai\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={classNames('surface-ground flex align-items-center justify-content-center min-h-screen min-w-screen overflow-hidden', { 'p-input-filled': layoutConfig.inputStyle === 'filled' })}>\r\n            <div className=\"flex flex-column align-items-center justify-content-center\">\r\n                <div style={{ borderRadius: '56px', padding: '0.3rem', background: 'linear-gradient(180deg, var(--primary-color) 10%, rgba(33, 150, 243, 0) 30%)' }}>\r\n                    <div className=\"w-full surface-card py-8 px-5 sm:px-8\" style={{ borderRadius: '53px' }}>\r\n                        <div className=\"text-center mb-5\">\r\n                            <div className=\"text-900 text-3xl font-medium mb-3\">Sign up to continue!</div>\r\n                            <span className=\"text-600 font-medium\">\r\n                                <div className={notification.type === 'error' ? 'alert alert-danger' : 'alert alert-success'}>\r\n                                    {notification.message}\r\n                                </div>\r\n                            </span>\r\n                        </div>\r\n\r\n                        {isLoading ? ( // Tampilkan spinner jika loading\r\n                            <div className=\"flex justify-content-center\">\r\n                                <ProgressSpinner />\r\n                            </div>\r\n                        ) : (\r\n                            <div>\r\n                                <label htmlFor=\"fullname1\" className=\"block text-900 text-xl font-medium mb-2\">*Full Name</label>\r\n                                <InputText id=\"fullname1\" type=\"text\" value={full_name} onChange={(e) => setFullName(e.target.value)} className=\"w-full md:w-30rem mb-5\" style={{ padding: '1rem' }} placeholder='Input Your Name' />\r\n\r\n                                <label htmlFor=\"whatsapp1\" className=\"block text-900 text-xl font-medium mb-2\">*No Whatsapp</label>\r\n                                <div className=\"flex\">\r\n                                    <InputText inputid=\"countryCode\" type=\"text\" value={countryCode} className=\"mb-5 mr-2\" style={{ padding: '1rem', width: '4rem' }} disabled />\r\n                                    <InputText inputid=\"whatsapp1\" type=\"text\" value={whatsapp} onChange={(e) => setWhatsapp(e.target.value)} className=\"w-full md:w-25,2rem mb-5\" style={{ padding: '1rem' }} placeholder='Input WhatsApp Number' />\r\n                                </div>\r\n\r\n                                <label htmlFor=\"email\" className=\"block text-900 text-xl font-medium mb-2\">*Email</label>\r\n                                <InputText id=\"email\" type=\"text\" value={email} onChange={(e) => setEmail(e.target.value)} className=\"w-full md:w-30rem mb-5\" style={{ padding: '1rem' }} placeholder='Email Company' />\r\n\r\n                                <label htmlFor=\"password1\" className=\"block text-900 font-medium text-xl mb-2\">*Password</label>\r\n                                <Password id=\"password1\" value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"Password\" toggleMask className=\"w-full mb-5\" inputClassName=\"w-full p-3 md:w-30rem\" />\r\n\r\n                                <div className=\"flex align-items-center justify-content-between mb-5 gap-5\">\r\n                                    <div className=\"flex align-items-center\">\r\n                                        <Checkbox inputid=\"rememberme1\" checked={checked} onChange={(e) => setChecked(e.checked)} className=\"mr-2\"></Checkbox>\r\n                                        <label htmlFor=\"rememberme1\">\r\n                                            Remember me\r\n                                        </label>\r\n                                    </div>\r\n                                    <Link href=\"/password/request-forgot-password\">\r\n                                        <a className=\"font-medium no-underline ml-2 text-right cursor-pointer\" style={{ color: 'var(--primary-color)' }}>Forgot password?</a>\r\n                                    </Link>\r\n                                </div>\r\n\r\n                                <Button label=\"Sign Up\" className=\"w-full p-3 text-xl\" onClick={handleRegister} disabled={!isFormValid || isLoading} />\r\n                                <Link href=\"/accounts/tap/login\">\r\n                                    <div style={{ textAlign: 'center', marginTop: '2rem' }}>\r\n                                        Already have an account?\r\n                                        <a className=\"font-medium no-underline cursor-pointer\" style={{ color: 'var(--primary-color)' }}>Login?</a>\r\n                                    </div>\r\n                                </Link>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nRegisterPage.getLayout = function getLayout(page) {\r\n    return (\r\n        <React.Fragment>\r\n            {page}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default RegisterPage;\r\n"
        }
    ]
}