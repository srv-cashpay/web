{
    "sourceFile": "pages/pages/role/Dialogs/UserCreateDialog.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1736922691257,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1736922739081,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,15 +5,15 @@\n import { classNames } from 'primereact/utils';\r\n import { RadioButton } from 'primereact/radiobutton';\r\n import { InputTextarea } from 'primereact/inputtextarea';\r\n \r\n-const UserCreateDialog = ({ visible, role, setUser, hideDialog, saveUser, submitted }) => {\r\n+const RoleCreateDialog = ({ visible, role, setRole, hideDialog, saveRole, submitted }) => {\r\n     const [imagePreview, setImagePreview] = useState(null); // State to store image preview URL\r\n     const [imageFile, setImageFile] = useState(null); // State to store the image file for submission\r\n    \r\n     const onStatusChange = (e) => {\r\n-        setUser(prevUser => ({\r\n-            ...prevUser,\r\n+        setRole(prevRole => ({\r\n+            ...prevRole,\r\n             status: e.value === \"Active\" ? 1 : 2, \r\n         }));\r\n     };\r\n \r\n@@ -21,31 +21,31 @@\n         let val = (e.target && e.target.value) || '';\r\n \r\n         let _role = { ...role };\r\n         _role[name] = ['stock', 'minimal_stock', 'price'].includes(name) ? parseInt(val) || 0 : val;\r\n-        setUser(_role);\r\n+        setRole(_role);\r\n     };\r\n \r\n     const roleDialogFooter = (\r\n         <>\r\n             <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog} />\r\n-            <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={saveUser} />\r\n+            <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={saveRole} />\r\n         </>\r\n     );\r\n \r\n     return (\r\n-        <Dialog visible={visible} style={{ width: '600px' }} header=\"User Details\" modal className=\"p-fluid\" footer={roleDialogFooter} onHide={hideDialog}>\r\n+        <Dialog visible={visible} style={{ width: '600px' }} header=\"Role Details\" modal className=\"p-fluid\" footer={roleDialogFooter} onHide={hideDialog}>\r\n             <div className=\"field\">\r\n-                <label htmlFor=\"role\">User name</label>\r\n+                <label htmlFor=\"role\">Role name</label>\r\n                 <InputText\r\n                     id=\"role\"\r\n                     value={role.role}\r\n                     onChange={(e) => onInputChange(e, 'role')}\r\n                     required\r\n                     autoFocus\r\n                     className={classNames({ 'p-invalid': submitted && !role.role })}\r\n                 />\r\n-                {submitted && !role.role && <small className=\"p-invalid\">User name is required. Please provide a valid name.</small>}\r\n+                {submitted && !role.role && <small className=\"p-invalid\">Role name is required. Please provide a valid name.</small>}\r\n             </div>\r\n \r\n             <div className=\"field\">\r\n                 <label htmlFor=\"description\">Description</label>\r\n@@ -71,5 +71,5 @@\n         </Dialog>\r\n     );\r\n };\r\n \r\n-export default UserCreateDialog;\r\n+export default RoleCreateDialog;\r\n"
                }
            ],
            "date": 1736922691257,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Button } from 'primereact/button';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { classNames } from 'primereact/utils';\r\nimport { RadioButton } from 'primereact/radiobutton';\r\nimport { InputTextarea } from 'primereact/inputtextarea';\r\n\r\nconst UserCreateDialog = ({ visible, role, setUser, hideDialog, saveUser, submitted }) => {\r\n    const [imagePreview, setImagePreview] = useState(null); // State to store image preview URL\r\n    const [imageFile, setImageFile] = useState(null); // State to store the image file for submission\r\n   \r\n    const onStatusChange = (e) => {\r\n        setUser(prevUser => ({\r\n            ...prevUser,\r\n            status: e.value === \"Active\" ? 1 : 2, \r\n        }));\r\n    };\r\n\r\n    const onInputChange = (e, name) => {\r\n        let val = (e.target && e.target.value) || '';\r\n\r\n        let _role = { ...role };\r\n        _role[name] = ['stock', 'minimal_stock', 'price'].includes(name) ? parseInt(val) || 0 : val;\r\n        setUser(_role);\r\n    };\r\n\r\n    const roleDialogFooter = (\r\n        <>\r\n            <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog} />\r\n            <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={saveUser} />\r\n        </>\r\n    );\r\n\r\n    return (\r\n        <Dialog visible={visible} style={{ width: '600px' }} header=\"User Details\" modal className=\"p-fluid\" footer={roleDialogFooter} onHide={hideDialog}>\r\n            <div className=\"field\">\r\n                <label htmlFor=\"role\">User name</label>\r\n                <InputText\r\n                    id=\"role\"\r\n                    value={role.role}\r\n                    onChange={(e) => onInputChange(e, 'role')}\r\n                    required\r\n                    autoFocus\r\n                    className={classNames({ 'p-invalid': submitted && !role.role })}\r\n                />\r\n                {submitted && !role.role && <small className=\"p-invalid\">User name is required. Please provide a valid name.</small>}\r\n            </div>\r\n\r\n            <div className=\"field\">\r\n                <label htmlFor=\"description\">Description</label>\r\n                <InputTextarea\r\n                    id=\"description\"\r\n                    value={role.description}\r\n                    onChange={(e) => onInputChange(e, 'description')}\r\n                    required\r\n                    rows={3}\r\n                    autoFocus\r\n                    className={classNames({ 'p-invalid': submitted && !role.description })}\r\n                />\r\n                {submitted && !role.description && <small className=\"p-invalid\">Description is required. Please enter a role description.</small>}\r\n            </div>\r\n\r\n           <div className=\"field-radiobutton\">\r\n                           <RadioButton inputId=\"statusActive\" name=\"status\" value=\"Active\" onChange={onStatusChange} checked={role.status === 1} />\r\n                           <label htmlFor=\"statusActive\">Active</label>\r\n           \r\n                           <RadioButton inputId=\"statusInactive\" name=\"status\" value=\"Inactive\" onChange={onStatusChange} checked={role.status === 2} />\r\n                           <label htmlFor=\"statusInactive\">Inactive</label>\r\n                       </div>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default UserCreateDialog;\r\n"
        }
    ]
}