{
    "sourceFile": "pages/pages/role/Dialogs/UserUpdateDialog.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1736922699233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1736922730906,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n import { InputText } from 'primereact/inputtext';\r\n import { classNames } from 'primereact/utils';\r\n import { RadioButton } from 'primereact/radiobutton';\r\n \r\n-const UserUpdateDialog = ({ visible, role, setUser, hideDialog, updateUser, submitted }) => {\r\n+const RoleUpdateDialog = ({ visible, role, setRole, hideDialog, updateRole, submitted }) => {\r\n     const onInputChange = (e, name) => {\r\n         let val = (e.target && e.target.value) || '';\r\n         \r\n         if (name === 'price') {\r\n@@ -18,44 +18,44 @@\n         }\r\n         \r\n         let _role = { ...role };\r\n         _role[name] = ['stock', 'minimal_stock', 'price'].includes(name) ? parseInt(val) || 0 : val;\r\n-        setUser(_role);\r\n+        setRole(_role);\r\n     };\r\n \r\n     const onStatusChange = (e) => {\r\n         const value = e.value; \r\n-        setUser(prevUser => ({ ...prevUser, status: value }));\r\n+        setRole(prevRole => ({ ...prevRole, status: value }));\r\n     };\r\n \r\n     const roleDialogFooter = (\r\n         <>\r\n             <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog} />\r\n-            <Button label=\"Update\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={updateUser} />\r\n+            <Button label=\"Update\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={updateRole} />\r\n         </>\r\n     );\r\n \r\n     return (\r\n-        <Dialog visible={visible} style={{ width: '450px' }} header=\"Update User\" modal className=\"p-fluid\" footer={roleDialogFooter} onHide={hideDialog}>\r\n+        <Dialog visible={visible} style={{ width: '450px' }} header=\"Update Role\" modal className=\"p-fluid\" footer={roleDialogFooter} onHide={hideDialog}>\r\n             {role.image && <img src={`${role.image}`} alt={role.image} width=\"150\" className=\"mt-0 mx-auto mb-5 block shadow-2\" />}\r\n             \r\n             <div className=\"field\">\r\n-                <label htmlFor=\"id\">User ID</label>\r\n+                <label htmlFor=\"id\">Role ID</label>\r\n                 <InputText id=\"id\" value={role.id} onChange={(e) => onInputChange(e, 'id')} disabled />\r\n             </div>\r\n             <div className=\"field\">\r\n-                <label htmlFor=\"role\">User Name</label>\r\n+                <label htmlFor=\"role\">Role Name</label>\r\n                 <InputText id=\"role\" value={role.role} onChange={(e) => onInputChange(e, 'role')} required autoFocus className={classNames({ 'p-invalid': submitted && !role.role })} />\r\n-                {submitted && !role.role && <small className=\"p-invalid\">User name is required.</small>}\r\n+                {submitted && !role.role && <small className=\"p-invalid\">Role name is required.</small>}\r\n             </div>\r\n             <div className=\"field\" style={{ display: 'flex', gap: '1rem' }}></div>\r\n                         <div className=\"field\">\r\n                             <label htmlFor=\"description\">Description</label>\r\n                             <InputText id=\"description\" value={role.description} onChange={(e) => onInputChange(e, 'description')} required autoFocus className={classNames({ 'p-invalid': submitted && !role.description })} />\r\n                             {submitted && !role.price && <small className=\"p-invalid\">Name is required.</small>}\r\n                         </div>            \r\n             <div className=\"field\">\r\n-                <label className=\"mb-3\">User Status</label>\r\n+                <label className=\"mb-3\">Role Status</label>\r\n                 <div className=\"formgrid grid\">\r\n                     <div className=\"field-radiobutton col-6\">\r\n                         <RadioButton inputId=\"status1\" name=\"status\" value={1} onChange={onStatusChange} checked={role.status === 1} />\r\n                         <label htmlFor=\"status1\">Active</label>\r\n@@ -69,5 +69,5 @@\n         </Dialog>\r\n     );\r\n };\r\n \r\n-export default UserUpdateDialog;\r\n+export default RoleUpdateDialog;\r\n"
                }
            ],
            "date": 1736922699233,
            "name": "Commit-0",
            "content": "import React from 'react';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Button } from 'primereact/button';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { classNames } from 'primereact/utils';\r\nimport { RadioButton } from 'primereact/radiobutton';\r\n\r\nconst UserUpdateDialog = ({ visible, role, setUser, hideDialog, updateUser, submitted }) => {\r\n    const onInputChange = (e, name) => {\r\n        let val = (e.target && e.target.value) || '';\r\n        \r\n        if (name === 'price') {\r\n            val = parseInt(val.replace(/[^0-9]/g, '')) || 0; // Hapus karakter selain angka\r\n            // Batasi harga maksimum hingga 1 miliar\r\n        if (val > 1000000000) {\r\n            val = 1000000000;\r\n        }\r\n        }\r\n        \r\n        let _role = { ...role };\r\n        _role[name] = ['stock', 'minimal_stock', 'price'].includes(name) ? parseInt(val) || 0 : val;\r\n        setUser(_role);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        const value = e.value; \r\n        setUser(prevUser => ({ ...prevUser, status: value }));\r\n    };\r\n\r\n    const roleDialogFooter = (\r\n        <>\r\n            <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog} />\r\n            <Button label=\"Update\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={updateUser} />\r\n        </>\r\n    );\r\n\r\n    return (\r\n        <Dialog visible={visible} style={{ width: '450px' }} header=\"Update User\" modal className=\"p-fluid\" footer={roleDialogFooter} onHide={hideDialog}>\r\n            {role.image && <img src={`${role.image}`} alt={role.image} width=\"150\" className=\"mt-0 mx-auto mb-5 block shadow-2\" />}\r\n            \r\n            <div className=\"field\">\r\n                <label htmlFor=\"id\">User ID</label>\r\n                <InputText id=\"id\" value={role.id} onChange={(e) => onInputChange(e, 'id')} disabled />\r\n            </div>\r\n            <div className=\"field\">\r\n                <label htmlFor=\"role\">User Name</label>\r\n                <InputText id=\"role\" value={role.role} onChange={(e) => onInputChange(e, 'role')} required autoFocus className={classNames({ 'p-invalid': submitted && !role.role })} />\r\n                {submitted && !role.role && <small className=\"p-invalid\">User name is required.</small>}\r\n            </div>\r\n            <div className=\"field\" style={{ display: 'flex', gap: '1rem' }}></div>\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"description\">Description</label>\r\n                            <InputText id=\"description\" value={role.description} onChange={(e) => onInputChange(e, 'description')} required autoFocus className={classNames({ 'p-invalid': submitted && !role.description })} />\r\n                            {submitted && !role.price && <small className=\"p-invalid\">Name is required.</small>}\r\n                        </div>            \r\n            <div className=\"field\">\r\n                <label className=\"mb-3\">User Status</label>\r\n                <div className=\"formgrid grid\">\r\n                    <div className=\"field-radiobutton col-6\">\r\n                        <RadioButton inputId=\"status1\" name=\"status\" value={1} onChange={onStatusChange} checked={role.status === 1} />\r\n                        <label htmlFor=\"status1\">Active</label>\r\n                    </div>\r\n                    <div className=\"field-radiobutton col-6\">\r\n                        <RadioButton inputId=\"status2\" name=\"status\" value={2} onChange={onStatusChange} checked={role.status === 2} />\r\n                        <label htmlFor=\"status2\">Non Active</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default UserUpdateDialog;\r\n"
        }
    ]
}