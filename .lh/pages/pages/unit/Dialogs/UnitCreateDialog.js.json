{
    "sourceFile": "pages/pages/unit/Dialogs/UnitCreateDialog.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1736825614647,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1736825623517,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,43 +5,43 @@\n import { classNames } from 'primereact/utils';\r\n import { RadioButton } from 'primereact/radiobutton';\r\n import { InputTextarea } from 'primereact/inputtextarea';\r\n \r\n-const MerkCreateDialog = ({ visible, unit, setMerk, hideDialog, saveMerk, submitted }) => {   \r\n+const UnitCreateDialog = ({ visible, unit, setUnit, hideDialog, saveUnit, submitted }) => {   \r\n     const onStatusChange = (e) => {\r\n-        setMerk(prevMerk => ({\r\n-            ...prevMerk,\r\n+        setUnit(prevUnit => ({\r\n+            ...prevUnit,\r\n             status: e.value === \"Active\" ? 1 : 2, \r\n         }));\r\n     };\r\n \r\n     const onInputChange = (e, name) => {\r\n         let val = (e.target && e.target.value.trim()); // Trim spasi di awal/akhir\r\n         let _unit = { ...unit };\r\n         _unit[name] = ['stock', 'minimal_stock', 'price'].includes(name) ? parseInt(val) || 0 : val;\r\n-        setMerk(_unit);\r\n+        setUnit(_unit);\r\n     };\r\n \r\n     const unitDialogFooter = (\r\n         <>\r\n             <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog} />\r\n-            <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={saveMerk} />\r\n+            <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={saveUnit} />\r\n         </>\r\n     );\r\n \r\n     return (\r\n-        <Dialog visible={visible} style={{ width: '600px' }} header=\"Merk Details\" modal className=\"p-fluid\" footer={unitDialogFooter} onHide={hideDialog}>\r\n+        <Dialog visible={visible} style={{ width: '600px' }} header=\"Unit Details\" modal className=\"p-fluid\" footer={unitDialogFooter} onHide={hideDialog}>\r\n             <div className=\"field\">\r\n-                <label htmlFor=\"unit_name\">Merk name</label>\r\n+                <label htmlFor=\"unit_name\">Unit name</label>\r\n                 <InputText\r\n                     id=\"unit_name\"\r\n                     value={unit.unit_name}\r\n                     onChange={(e) => onInputChange(e, 'unit_name')}\r\n                     required\r\n                     autoFocus\r\n                     className={classNames({ 'p-invalid': submitted && !unit.unit_name })}\r\n                 />\r\n-                {submitted && !unit.unit_name && <small className=\"p-invalid\">Merk name is required. Please provide a valid name.</small>}\r\n+                {submitted && !unit.unit_name && <small className=\"p-invalid\">Unit name is required. Please provide a valid name.</small>}\r\n             </div>\r\n \r\n             <div className=\"field\">\r\n                 <label htmlFor=\"description\">Description</label>\r\n@@ -67,5 +67,5 @@\n         </Dialog>\r\n     );\r\n };\r\n \r\n-export default MerkCreateDialog;\r\n+export default UnitCreateDialog;\r\n"
                },
                {
                    "date": 1736825677434,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,30 +41,8 @@\n                     className={classNames({ 'p-invalid': submitted && !unit.unit_name })}\r\n                 />\r\n                 {submitted && !unit.unit_name && <small className=\"p-invalid\">Unit name is required. Please provide a valid name.</small>}\r\n             </div>\r\n-\r\n-            <div className=\"field\">\r\n-                <label htmlFor=\"description\">Description</label>\r\n-                <InputTextarea\r\n-                    id=\"description\"\r\n-                    value={unit.description}\r\n-                    onChange={(e) => onInputChange(e, 'description')}\r\n-                    required\r\n-                    rows={3}\r\n-                    autoFocus\r\n-                    className={classNames({ 'p-invalid': submitted && !unit.description })}\r\n-                />\r\n-                {submitted && !unit.description && <small className=\"p-invalid\">Description is required. Please enter a unit description.</small>}\r\n-            </div>\r\n-\r\n-           <div className=\"field-radiobutton\">\r\n-                           <RadioButton inputId=\"statusActive\" name=\"status\" value=\"Active\" onChange={onStatusChange} checked={unit.status === 1} />\r\n-                           <label htmlFor=\"statusActive\">Active</label>\r\n-           \r\n-                           <RadioButton inputId=\"statusInactive\" name=\"status\" value=\"Inactive\" onChange={onStatusChange} checked={unit.status === 2} />\r\n-                           <label htmlFor=\"statusInactive\">Inactive</label>\r\n-                       </div>\r\n         </Dialog>\r\n     );\r\n };\r\n \r\n"
                },
                {
                    "date": 1736825769685,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,42 @@\n+import React, { useState } from 'react';\r\n+import { Dialog } from 'primereact/dialog';\r\n+import { Button } from 'primereact/button';\r\n+import { InputText } from 'primereact/inputtext';\r\n+import { classNames } from 'primereact/utils';\r\n+import { RadioButton } from 'primereact/radiobutton';\r\n+import { InputTextarea } from 'primereact/inputtextarea';\r\n+\r\n+const UnitCreateDialog = ({ visible, unit, setUnit, hideDialog, saveUnit, submitted }) => {   \r\n+    const onInputChange = (e, name) => {\r\n+        let val = (e.target && e.target.value.trim()); // Trim spasi di awal/akhir\r\n+        let _unit = { ...unit };\r\n+        _unit[name] = ['stock', 'minimal_stock', 'price'].includes(name) ? parseInt(val) || 0 : val;\r\n+        setUnit(_unit);\r\n+    };\r\n+\r\n+    const unitDialogFooter = (\r\n+        <>\r\n+            <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog} />\r\n+            <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={saveUnit} />\r\n+        </>\r\n+    );\r\n+\r\n+    return (\r\n+        <Dialog visible={visible} style={{ width: '600px' }} header=\"Unit Details\" modal className=\"p-fluid\" footer={unitDialogFooter} onHide={hideDialog}>\r\n+            <div className=\"field\">\r\n+                <label htmlFor=\"unit_name\">Unit name</label>\r\n+                <InputText\r\n+                    id=\"unit_name\"\r\n+                    value={unit.unit_name}\r\n+                    onChange={(e) => onInputChange(e, 'unit_name')}\r\n+                    required\r\n+                    autoFocus\r\n+                    className={classNames({ 'p-invalid': submitted && !unit.unit_name })}\r\n+                />\r\n+                {submitted && !unit.unit_name && <small className=\"p-invalid\">Unit name is required. Please provide a valid name.</small>}\r\n+            </div>\r\n+        </Dialog>\r\n+    );\r\n+};\r\n+\r\n+export default UnitCreateDialog;\r\n"
                },
                {
                    "date": 1736833797052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,10 +2,8 @@\n import { Dialog } from 'primereact/dialog';\r\n import { Button } from 'primereact/button';\r\n import { InputText } from 'primereact/inputtext';\r\n import { classNames } from 'primereact/utils';\r\n-import { RadioButton } from 'primereact/radiobutton';\r\n-import { InputTextarea } from 'primereact/inputtextarea';\r\n \r\n const UnitCreateDialog = ({ visible, unit, setUnit, hideDialog, saveUnit, submitted }) => {   \r\n     const onInputChange = (e, name) => {\r\n         let val = (e.target && e.target.value.trim()); // Trim spasi di awal/akhir\r\n@@ -39,53 +37,4 @@\n     );\r\n };\r\n \r\n export default UnitCreateDialog;\r\n-import React, { useState } from 'react';\r\n-import { Dialog } from 'primereact/dialog';\r\n-import { Button } from 'primereact/button';\r\n-import { InputText } from 'primereact/inputtext';\r\n-import { classNames } from 'primereact/utils';\r\n-import { RadioButton } from 'primereact/radiobutton';\r\n-import { InputTextarea } from 'primereact/inputtextarea';\r\n-\r\n-const UnitCreateDialog = ({ visible, unit, setUnit, hideDialog, saveUnit, submitted }) => {   \r\n-    const onStatusChange = (e) => {\r\n-        setUnit(prevUnit => ({\r\n-            ...prevUnit,\r\n-            status: e.value === \"Active\" ? 1 : 2, \r\n-        }));\r\n-    };\r\n-\r\n-    const onInputChange = (e, name) => {\r\n-        let val = (e.target && e.target.value.trim()); // Trim spasi di awal/akhir\r\n-        let _unit = { ...unit };\r\n-        _unit[name] = ['stock', 'minimal_stock', 'price'].includes(name) ? parseInt(val) || 0 : val;\r\n-        setUnit(_unit);\r\n-    };\r\n-\r\n-    const unitDialogFooter = (\r\n-        <>\r\n-            <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog} />\r\n-            <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={saveUnit} />\r\n-        </>\r\n-    );\r\n-\r\n-    return (\r\n-        <Dialog visible={visible} style={{ width: '600px' }} header=\"Unit Details\" modal className=\"p-fluid\" footer={unitDialogFooter} onHide={hideDialog}>\r\n-            <div className=\"field\">\r\n-                <label htmlFor=\"unit_name\">Unit name</label>\r\n-                <InputText\r\n-                    id=\"unit_name\"\r\n-                    value={unit.unit_name}\r\n-                    onChange={(e) => onInputChange(e, 'unit_name')}\r\n-                    required\r\n-                    autoFocus\r\n-                    className={classNames({ 'p-invalid': submitted && !unit.unit_name })}\r\n-                />\r\n-                {submitted && !unit.unit_name && <small className=\"p-invalid\">Unit name is required. Please provide a valid name.</small>}\r\n-            </div>\r\n-        </Dialog>\r\n-    );\r\n-};\r\n-\r\n-export default UnitCreateDialog;\r\n"
                }
            ],
            "date": 1736825614647,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Button } from 'primereact/button';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { classNames } from 'primereact/utils';\r\nimport { RadioButton } from 'primereact/radiobutton';\r\nimport { InputTextarea } from 'primereact/inputtextarea';\r\n\r\nconst MerkCreateDialog = ({ visible, unit, setMerk, hideDialog, saveMerk, submitted }) => {   \r\n    const onStatusChange = (e) => {\r\n        setMerk(prevMerk => ({\r\n            ...prevMerk,\r\n            status: e.value === \"Active\" ? 1 : 2, \r\n        }));\r\n    };\r\n\r\n    const onInputChange = (e, name) => {\r\n        let val = (e.target && e.target.value.trim()); // Trim spasi di awal/akhir\r\n        let _unit = { ...unit };\r\n        _unit[name] = ['stock', 'minimal_stock', 'price'].includes(name) ? parseInt(val) || 0 : val;\r\n        setMerk(_unit);\r\n    };\r\n\r\n    const unitDialogFooter = (\r\n        <>\r\n            <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog} />\r\n            <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={saveMerk} />\r\n        </>\r\n    );\r\n\r\n    return (\r\n        <Dialog visible={visible} style={{ width: '600px' }} header=\"Merk Details\" modal className=\"p-fluid\" footer={unitDialogFooter} onHide={hideDialog}>\r\n            <div className=\"field\">\r\n                <label htmlFor=\"unit_name\">Merk name</label>\r\n                <InputText\r\n                    id=\"unit_name\"\r\n                    value={unit.unit_name}\r\n                    onChange={(e) => onInputChange(e, 'unit_name')}\r\n                    required\r\n                    autoFocus\r\n                    className={classNames({ 'p-invalid': submitted && !unit.unit_name })}\r\n                />\r\n                {submitted && !unit.unit_name && <small className=\"p-invalid\">Merk name is required. Please provide a valid name.</small>}\r\n            </div>\r\n\r\n            <div className=\"field\">\r\n                <label htmlFor=\"description\">Description</label>\r\n                <InputTextarea\r\n                    id=\"description\"\r\n                    value={unit.description}\r\n                    onChange={(e) => onInputChange(e, 'description')}\r\n                    required\r\n                    rows={3}\r\n                    autoFocus\r\n                    className={classNames({ 'p-invalid': submitted && !unit.description })}\r\n                />\r\n                {submitted && !unit.description && <small className=\"p-invalid\">Description is required. Please enter a unit description.</small>}\r\n            </div>\r\n\r\n           <div className=\"field-radiobutton\">\r\n                           <RadioButton inputId=\"statusActive\" name=\"status\" value=\"Active\" onChange={onStatusChange} checked={unit.status === 1} />\r\n                           <label htmlFor=\"statusActive\">Active</label>\r\n           \r\n                           <RadioButton inputId=\"statusInactive\" name=\"status\" value=\"Inactive\" onChange={onStatusChange} checked={unit.status === 2} />\r\n                           <label htmlFor=\"statusInactive\">Inactive</label>\r\n                       </div>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default MerkCreateDialog;\r\n"
        }
    ]
}