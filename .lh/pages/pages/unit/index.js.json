{
    "sourceFile": "pages/pages/unit/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1736825600342,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1736825631307,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,39 +8,39 @@\n import { Toolbar } from 'primereact/toolbar';\r\n import React, { useEffect, useRef, useState } from 'react';\r\n import withAuth from '../../../layout/context/withAuth';\r\n import { Dropdown } from 'primereact/dropdown'; \r\n-import { fetchMerks, createMerk,updateExistingMerk, bulkDeleteMerks } from './api'; // Pastikan jalur ini sesuai\r\n-import { deleteMerk as deleteMerkById } from './api';\r\n-import MerkCreateDialog from './Dialogs/MerkCreateDialog';  // Import komponen MerkDialog\r\n-import MerkUpdateDialog from './Dialogs/MerkUpdateDialog';\r\n+import { fetchUnits, createUnit,updateExistingUnit, bulkDeleteUnits } from './api'; // Pastikan jalur ini sesuai\r\n+import { deleteUnit as deleteUnitById } from './api';\r\n+import UnitCreateDialog from './Dialogs/UnitCreateDialog';  // Import komponen UnitDialog\r\n+import UnitUpdateDialog from './Dialogs/UnitUpdateDialog';\r\n import { Badge } from 'primereact/badge';\r\n \r\n const Inventory = () => {\r\n-    let emptyMerk = {\r\n+    let emptyUnit = {\r\n         id: null,\r\n         user :{\r\n             unit_name: '',\r\n         },\r\n         status: 0,\r\n         description: ''\r\n     }; \r\n \r\n-    const [units, setMerks] = useState(null);\r\n-    const [unitDialog, setMerkDialog] = useState(false);\r\n-    const [unitUpdateDialog, setMerkUpdateDialog] = useState(false);\r\n-    const [deleteMerkDialog, setDeleteMerkDialog] = useState(false);\r\n-    const [deleteMerksDialog, setDeleteMerksDialog] = useState(false);\r\n-    const [unit, setMerk] = useState(emptyMerk);\r\n-    const [selectedMerks, setSelectedMerks] = useState(null);\r\n+    const [units, setUnits] = useState(null);\r\n+    const [unitDialog, setUnitDialog] = useState(false);\r\n+    const [unitUpdateDialog, setUnitUpdateDialog] = useState(false);\r\n+    const [deleteUnitDialog, setDeleteUnitDialog] = useState(false);\r\n+    const [deleteUnitsDialog, setDeleteUnitsDialog] = useState(false);\r\n+    const [unit, setUnit] = useState(emptyUnit);\r\n+    const [selectedUnits, setSelectedUnits] = useState(null);\r\n     const [submitted, setSubmitted] = useState(false);\r\n     const [globalFilter, setGlobalFilter] = useState(null);\r\n     const toast = useRef(null);\r\n     const dt = useRef(null);\r\n     const [rowsPerPage, setRowsPerPage] = useState(10); // Default 10\r\n \r\n-    const hideMerkDialog = () => {\r\n-        setShowMerkDialog(false);\r\n+    const hideUnitDialog = () => {\r\n+        setShowUnitDialog(false);\r\n     };\r\n     \r\n     const handleRowsPerPageChange = (newRowsPerPage) => {\r\n         setRowsPerPage(newRowsPerPage);\r\n@@ -58,10 +58,10 @@\n     \r\n     useEffect(() => {\r\n         const fetchData = async () => {\r\n             try {\r\n-                const response = await fetchMerks({ page: paginationData.page, limit: rowsPerPage,  totalPages: paginationData.totalPages});\r\n-                setMerks(Array.isArray(response.rows) ? response.rows : []);\r\n+                const response = await fetchUnits({ page: paginationData.page, limit: rowsPerPage,  totalPages: paginationData.totalPages});\r\n+                setUnits(Array.isArray(response.rows) ? response.rows : []);\r\n \r\n                 setPaginationData(prev => ({\r\n                     ...prev,\r\n                     totalPages: response.total_page,  // Ambil total halaman dari respons API\r\n@@ -80,79 +80,79 @@\n     }, [paginationData.page, rowsPerPage, paginationData.totalPages]); \r\n    \r\n \r\n     const openNew = () => {\r\n-        setMerk(emptyMerk);\r\n+        setUnit(emptyUnit);\r\n         setSubmitted(false);\r\n-        setMerkDialog(true);\r\n+        setUnitDialog(true);\r\n     };\r\n \r\n     const openEdit = (unitData) => {\r\n-        setMerk({ ...unitData });\r\n+        setUnit({ ...unitData });\r\n         setSubmitted(false);\r\n-        setMerkUpdateDialog(true);\r\n+        setUnitUpdateDialog(true);\r\n     };\r\n     \r\n \r\n     const hideDialog = () => {\r\n         setSubmitted(false);\r\n-        setMerkDialog(false);\r\n+        setUnitDialog(false);\r\n     };\r\n \r\n     const hideUpdateDialog = () => {\r\n         setSubmitted(false);\r\n-        setMerkUpdateDialog(false);\r\n+        setUnitUpdateDialog(false);\r\n     };\r\n \r\n-    const hideDeleteMerkDialog = () => {\r\n-        setDeleteMerkDialog(false);\r\n+    const hideDeleteUnitDialog = () => {\r\n+        setDeleteUnitDialog(false);\r\n     };\r\n \r\n-    const hideDeleteMerksDialog = () => {\r\n-        setDeleteMerksDialog(false);\r\n+    const hideDeleteUnitsDialog = () => {\r\n+        setDeleteUnitsDialog(false);\r\n     };\r\n \r\n-    const saveMerk = () => {\r\n+    const saveUnit = () => {\r\n         saveDataToApi();        \r\n     };\r\n \r\n     const saveDataToApi = async () => {\r\n         try { \r\n-            const response = await createMerk(unit);\r\n+            const response = await createUnit(unit);\r\n             toast.current.show({ severity: 'success', summary: 'Successful', detail: response.message, life: 3000 });\r\n         } catch (error) {\r\n             console.error(\"Error saving data:\", error);\r\n             toast.current.show({ severity: 'error', summary: 'Error', detail: error.response.data.meta.message, life: 3000 });\r\n         }\r\n     };\r\n \r\n-    const updateMerk = () => {\r\n+    const updateUnit = () => {\r\n         updateDataToApi();\r\n     };\r\n     \r\n     const updateDataToApi = async () => {\r\n         try { \r\n-            const response = await updateExistingMerk(unit); // Gantilah dengan fungsi update yang sesuai\r\n+            const response = await updateExistingUnit(unit); // Gantilah dengan fungsi update yang sesuai\r\n             toast.current.show({ severity: 'success', summary: 'Updated', detail: response.message, life: 3000 });\r\n         } catch (error) {\r\n             console.error(\"Error updating data:\", error);\r\n             toast.current.show({ severity: 'error', summary: 'Error', detail: error.response?.data?.meta?.message, life: 3000 });\r\n         }\r\n     };\r\n \r\n-    const confirmDeleteMerk = (unit) => {\r\n-        setMerk(unit);\r\n-        setDeleteMerkDialog(true);\r\n+    const confirmDeleteUnit = (unit) => {\r\n+        setUnit(unit);\r\n+        setDeleteUnitDialog(true);\r\n     };\r\n     \r\n-    const deleteMerk = async () => {\r\n+    const deleteUnit = async () => {\r\n         try {\r\n-            await deleteMerkById(unit.id); // Use the renamed function to delete by id\r\n+            await deleteUnitById(unit.id); // Use the renamed function to delete by id\r\n             const _units = units.filter((val) => val.id !== unit.id);\r\n-            setMerks(_units);\r\n-            setDeleteMerkDialog(false);\r\n-            setMerk(emptyMerk);\r\n-            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Merk Deleted', life: 3000 });\r\n+            setUnits(_units);\r\n+            setDeleteUnitDialog(false);\r\n+            setUnit(emptyUnit);\r\n+            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Unit Deleted', life: 3000 });\r\n         } catch (error) {\r\n             console.error(\"Error deleting unit:\", error);\r\n             toast.current.show({ severity: 'error', summary: 'Error', detail: 'Failed to delete unit', life: 3000 });\r\n         }\r\n@@ -162,20 +162,20 @@\n         dt.current.exportCSV();\r\n     };\r\n \r\n     const confirmDeleteSelected = () => {\r\n-        setDeleteMerksDialog(true);\r\n+        setDeleteUnitsDialog(true);\r\n     };\r\n \r\n-    const bulkDeleteSelectedMerks = async () => {\r\n+    const bulkDeleteSelectedUnits = async () => {\r\n         try {\r\n-            const selectedMerkIds = selectedMerks.map((unit) => unit.id);\r\n-            await bulkDeleteMerks(selectedMerkIds);\r\n-            const _units = units.filter((unit) => !selectedMerkIds.includes(unit.id));\r\n-            setMerks(_units);\r\n-            setDeleteMerksDialog(false);\r\n-            setSelectedMerks(null);\r\n-            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Merks Deleted', life: 3000 });\r\n+            const selectedUnitIds = selectedUnits.map((unit) => unit.id);\r\n+            await bulkDeleteUnits(selectedUnitIds);\r\n+            const _units = units.filter((unit) => !selectedUnitIds.includes(unit.id));\r\n+            setUnits(_units);\r\n+            setDeleteUnitsDialog(false);\r\n+            setSelectedUnits(null);\r\n+            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Units Deleted', life: 3000 });\r\n         } catch (error) {\r\n             console.error(\"Error deleting units:\", error);\r\n             toast.current.show({ severity: 'error', summary: 'Error', detail: 'Failed to delete units', life: 3000 });\r\n         }\r\n@@ -185,9 +185,9 @@\n         return (\r\n             <React.Fragment>\r\n                 <div className=\"my-2\">\r\n                     <Button label=\"New\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\r\n-                    <Button label=\"Bulk Delete\" icon=\"pi pi-trash\" className=\"p-button-danger mr-2\" onClick={confirmDeleteSelected} disabled={!selectedMerks || !selectedMerks.length} />\r\n+                    <Button label=\"Bulk Delete\" icon=\"pi pi-trash\" className=\"p-button-danger mr-2\" onClick={confirmDeleteSelected} disabled={!selectedUnits || !selectedUnits.length} />\r\n             </div>\r\n             </React.Fragment>\r\n         );\r\n     };\r\n@@ -254,33 +254,33 @@\n     const actionBodyTemplate = (rowData) => {\r\n         return (\r\n             <>\r\n                 <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-success mr-1\" onClick={() => openEdit (rowData)} />\r\n-                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => confirmDeleteMerk(rowData)} />\r\n+                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => confirmDeleteUnit(rowData)} />\r\n             </>\r\n         );\r\n     };\r\n \r\n     const header = (\r\n         <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\r\n-            <h5 className=\"m-0\">Manage Merks</h5>\r\n+            <h5 className=\"m-0\">Manage Units</h5>\r\n             <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\r\n                 <i className=\"pi pi-search\" />\r\n                 <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\r\n             </span>\r\n         </div>\r\n     );\r\n \r\n-    const deleteMerkDialogFooter = (\r\n+    const deleteUnitDialogFooter = (\r\n         <>\r\n-            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteMerkDialog} />\r\n-            <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deleteMerk} />\r\n+            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteUnitDialog} />\r\n+            <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deleteUnit} />\r\n         </>\r\n     );\r\n-    const deleteMerksDialogFooter = (\r\n+    const deleteUnitsDialogFooter = (\r\n         <>\r\n-            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteMerksDialog} />\r\n-            <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={bulkDeleteSelectedMerks} />\r\n+            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteUnitsDialog} />\r\n+            <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={bulkDeleteSelectedUnits} />\r\n \r\n         </>\r\n     );\r\n \r\n@@ -301,10 +301,10 @@\n \r\n                     <DataTable\r\n                        ref={dt}\r\n                        value={units}\r\n-                       selection={selectedMerks}\r\n-                       onSelectionChange={(e) => setSelectedMerks(e.value)}\r\n+                       selection={selectedUnits}\r\n+                       onSelectionChange={(e) => setSelectedUnits(e.value)}\r\n                        dataKey=\"id\"\r\n                        className=\"datatable-responsive\"\r\n                        globalFilter={globalFilter}\r\n                        emptyMessage=\"No units found.\"\r\n@@ -324,9 +324,9 @@\n                     <div className=\"flex justify-content-between align-items-center\">\r\n                         <Button icon=\"pi pi-angle-left\" className=\"p-button-text\" onClick={handlePreviousPage} disabled={paginationData.page === 1} />\r\n                         <span>{`Page ${paginationData.page} of ${paginationData.totalPages }`}</span>\r\n                         <Button icon=\"pi pi-angle-right\" className=\"p-button-text\" onClick={handleNextPage} disabled={paginationData.page === paginationData.totalPages} />\r\n-                        <span>{`Inventory ${paginationData.totalRows } Merks`}</span>\r\n+                        <span>{`Inventory ${paginationData.totalRows } Units`}</span>\r\n                     </div>\r\n                                 <Dropdown\r\n                         value={rowsPerPage}\r\n                         options={[10, 25, 50]} // Opsi untuk jumlah baris per halaman\r\n@@ -334,26 +334,26 @@\n                             placeholder=\"Rows per page\"\r\n                             className=\"ml-2\"\r\n                         />\r\n                 </div>              \r\n-                        <MerkCreateDialog\r\n+                        <UnitCreateDialog\r\n                         visible={unitDialog}\r\n                         unit={unit}\r\n-                        setMerk={setMerk}\r\n+                        setUnit={setUnit}\r\n                         hideDialog={hideDialog}\r\n-                        saveMerk={saveMerk}\r\n+                        saveUnit={saveUnit}\r\n                         submitted={submitted}\r\n                         />\r\n-                         <MerkUpdateDialog\r\n+                         <UnitUpdateDialog\r\n                             visible={unitUpdateDialog}\r\n                             unit={unit}\r\n-                            setMerk={setMerk}\r\n+                            setUnit={setUnit}\r\n                             hideDialog={hideUpdateDialog}\r\n-                            updateMerk={updateMerk}\r\n+                            updateUnit={updateUnit}\r\n                             submitted={submitted}\r\n                         />\r\n \r\n-                    <Dialog visible={deleteMerkDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteMerkDialogFooter} onHide={hideDeleteMerkDialog}>\r\n+                    <Dialog visible={deleteUnitDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteUnitDialogFooter} onHide={hideDeleteUnitDialog}>\r\n                         <div className=\"flex align-items-center justify-content-center\">\r\n                             <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\r\n                             {unit && (\r\n                                 <span>\r\n@@ -362,9 +362,9 @@\n                             )}\r\n                         </div>\r\n                     </Dialog>\r\n \r\n-                    <Dialog visible={deleteMerksDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteMerksDialogFooter} onHide={hideDeleteMerksDialog}>\r\n+                    <Dialog visible={deleteUnitsDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteUnitsDialogFooter} onHide={hideDeleteUnitsDialog}>\r\n                         <div className=\"flex align-items-center justify-content-center\">\r\n                             <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\r\n                             {unit && <span>Are you sure you want to delete the selected units?</span>}\r\n                         </div>\r\n"
                },
                {
                    "date": 1736825744662,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,10 +20,8 @@\n         id: null,\r\n         user :{\r\n             unit_name: '',\r\n         },\r\n-        status: 0,\r\n-        description: ''\r\n     }; \r\n \r\n     const [units, setUnits] = useState(null);\r\n     const [unitDialog, setUnitDialog] = useState(false);\r\n@@ -224,21 +222,8 @@\n             </>\r\n         );\r\n     };\r\n \r\n-    const statusBodyTemplate = (rowData) => {\r\n-        return (\r\n-            <>\r\n-                <span className=\"p-column-title\">Status</span>\r\n-                <Badge\r\n-                    value={rowData.status === 1 ? 'Active' : 'Inactive'}\r\n-                    severity={rowData.status === 1 ? 'success' : 'danger'}\r\n-                    className=\"ml-2\"\r\n-                />\r\n-            </>\r\n-        );\r\n-    };  \r\n-\r\n     const handleNextPage = () => {\r\n         setPaginationData(prev => {\r\n             const nextPage = prev.page + 1;\r\n             return { ...prev, page: nextPage > prev.totalPages ? prev.totalPages : nextPage };\r\n@@ -315,9 +300,8 @@\n                         <Column field=\"nomor\" header=\"No\" body={nomorBodyTemplate} style={{ width: '5%' }} />\r\n \r\n                         <Column field=\"unit_name\" header=\"Name\" sortable body={nameBodyTemplate} headerStyle={{ minWidth: '10rem' }}></Column>\r\n                         <Column field=\"created_by\" header=\"Created By\" sortable body={unitBodyTemplate}></Column>\r\n-                        <Column field=\"status\" header=\"Status\" body={statusBodyTemplate}></Column>\r\n                         <Column field=\"action\" body={actionBodyTemplate} ></Column>\r\n                     </DataTable>\r\n \r\n                     <div className=\"paginator-buttons\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n"
                }
            ],
            "date": 1736825600342,
            "name": "Commit-0",
            "content": "import { Button } from 'primereact/button';\r\nimport { Column } from 'primereact/column';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Toast } from 'primereact/toast';\r\nimport { Toolbar } from 'primereact/toolbar';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport withAuth from '../../../layout/context/withAuth';\r\nimport { Dropdown } from 'primereact/dropdown'; \r\nimport { fetchMerks, createMerk,updateExistingMerk, bulkDeleteMerks } from './api'; // Pastikan jalur ini sesuai\r\nimport { deleteMerk as deleteMerkById } from './api';\r\nimport MerkCreateDialog from './Dialogs/MerkCreateDialog';  // Import komponen MerkDialog\r\nimport MerkUpdateDialog from './Dialogs/MerkUpdateDialog';\r\nimport { Badge } from 'primereact/badge';\r\n\r\nconst Inventory = () => {\r\n    let emptyMerk = {\r\n        id: null,\r\n        user :{\r\n            unit_name: '',\r\n        },\r\n        status: 0,\r\n        description: ''\r\n    }; \r\n\r\n    const [units, setMerks] = useState(null);\r\n    const [unitDialog, setMerkDialog] = useState(false);\r\n    const [unitUpdateDialog, setMerkUpdateDialog] = useState(false);\r\n    const [deleteMerkDialog, setDeleteMerkDialog] = useState(false);\r\n    const [deleteMerksDialog, setDeleteMerksDialog] = useState(false);\r\n    const [unit, setMerk] = useState(emptyMerk);\r\n    const [selectedMerks, setSelectedMerks] = useState(null);\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const [globalFilter, setGlobalFilter] = useState(null);\r\n    const toast = useRef(null);\r\n    const dt = useRef(null);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10); // Default 10\r\n\r\n    const hideMerkDialog = () => {\r\n        setShowMerkDialog(false);\r\n    };\r\n    \r\n    const handleRowsPerPageChange = (newRowsPerPage) => {\r\n        setRowsPerPage(newRowsPerPage);\r\n        setPaginationData(prev => ({ ...prev, limit: newRowsPerPage, page: 1 })); // Reset ke halaman 1 saat limit berubah\r\n    };\r\n    \r\n    const [paginationData, setPaginationData] = useState({\r\n        page: 1, // Start from page 1 as per your requirement\r\n        totaPages: 0,\r\n        limit: 10, // Default limit to 10\r\n        totalData: 0,\r\n        totalRows: 0,\r\n        nextPage: 0,\r\n    });\r\n    \r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetchMerks({ page: paginationData.page, limit: rowsPerPage,  totalPages: paginationData.totalPages});\r\n                setMerks(Array.isArray(response.rows) ? response.rows : []);\r\n\r\n                setPaginationData(prev => ({\r\n                    ...prev,\r\n                    totalPages: response.total_page,  // Ambil total halaman dari respons API\r\n                    totalData: response.total_data,\r\n                    totalRows: response.total_rows,\r\n                    nextPage: response.next_page\r\n                    \r\n                }));\r\n            } catch (error) {\r\n                console.error(\"Error fetching data:\", error);\r\n            }\r\n        };\r\n        fetchData();\r\n        console.log(\"Updated Pagination Data:\", paginationData);  // Log setiap kali paginationData berubah\r\n\r\n    }, [paginationData.page, rowsPerPage, paginationData.totalPages]); \r\n   \r\n\r\n    const openNew = () => {\r\n        setMerk(emptyMerk);\r\n        setSubmitted(false);\r\n        setMerkDialog(true);\r\n    };\r\n\r\n    const openEdit = (unitData) => {\r\n        setMerk({ ...unitData });\r\n        setSubmitted(false);\r\n        setMerkUpdateDialog(true);\r\n    };\r\n    \r\n\r\n    const hideDialog = () => {\r\n        setSubmitted(false);\r\n        setMerkDialog(false);\r\n    };\r\n\r\n    const hideUpdateDialog = () => {\r\n        setSubmitted(false);\r\n        setMerkUpdateDialog(false);\r\n    };\r\n\r\n    const hideDeleteMerkDialog = () => {\r\n        setDeleteMerkDialog(false);\r\n    };\r\n\r\n    const hideDeleteMerksDialog = () => {\r\n        setDeleteMerksDialog(false);\r\n    };\r\n\r\n    const saveMerk = () => {\r\n        saveDataToApi();        \r\n    };\r\n\r\n    const saveDataToApi = async () => {\r\n        try { \r\n            const response = await createMerk(unit);\r\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: response.message, life: 3000 });\r\n        } catch (error) {\r\n            console.error(\"Error saving data:\", error);\r\n            toast.current.show({ severity: 'error', summary: 'Error', detail: error.response.data.meta.message, life: 3000 });\r\n        }\r\n    };\r\n\r\n    const updateMerk = () => {\r\n        updateDataToApi();\r\n    };\r\n    \r\n    const updateDataToApi = async () => {\r\n        try { \r\n            const response = await updateExistingMerk(unit); // Gantilah dengan fungsi update yang sesuai\r\n            toast.current.show({ severity: 'success', summary: 'Updated', detail: response.message, life: 3000 });\r\n        } catch (error) {\r\n            console.error(\"Error updating data:\", error);\r\n            toast.current.show({ severity: 'error', summary: 'Error', detail: error.response?.data?.meta?.message, life: 3000 });\r\n        }\r\n    };\r\n\r\n    const confirmDeleteMerk = (unit) => {\r\n        setMerk(unit);\r\n        setDeleteMerkDialog(true);\r\n    };\r\n    \r\n    const deleteMerk = async () => {\r\n        try {\r\n            await deleteMerkById(unit.id); // Use the renamed function to delete by id\r\n            const _units = units.filter((val) => val.id !== unit.id);\r\n            setMerks(_units);\r\n            setDeleteMerkDialog(false);\r\n            setMerk(emptyMerk);\r\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Merk Deleted', life: 3000 });\r\n        } catch (error) {\r\n            console.error(\"Error deleting unit:\", error);\r\n            toast.current.show({ severity: 'error', summary: 'Error', detail: 'Failed to delete unit', life: 3000 });\r\n        }\r\n    };\r\n    \r\n    const exportCSV = () => {\r\n        dt.current.exportCSV();\r\n    };\r\n\r\n    const confirmDeleteSelected = () => {\r\n        setDeleteMerksDialog(true);\r\n    };\r\n\r\n    const bulkDeleteSelectedMerks = async () => {\r\n        try {\r\n            const selectedMerkIds = selectedMerks.map((unit) => unit.id);\r\n            await bulkDeleteMerks(selectedMerkIds);\r\n            const _units = units.filter((unit) => !selectedMerkIds.includes(unit.id));\r\n            setMerks(_units);\r\n            setDeleteMerksDialog(false);\r\n            setSelectedMerks(null);\r\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Merks Deleted', life: 3000 });\r\n        } catch (error) {\r\n            console.error(\"Error deleting units:\", error);\r\n            toast.current.show({ severity: 'error', summary: 'Error', detail: 'Failed to delete units', life: 3000 });\r\n        }\r\n    };    \r\n\r\n    const leftToolbarTemplate = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"my-2\">\r\n                    <Button label=\"New\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\r\n                    <Button label=\"Bulk Delete\" icon=\"pi pi-trash\" className=\"p-button-danger mr-2\" onClick={confirmDeleteSelected} disabled={!selectedMerks || !selectedMerks.length} />\r\n            </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    const rightToolbarTemplate = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"mr-2 inline-block\" />\r\n                <Button label=\"Export\" icon=\"pi pi-upload\" className=\"p-button-help\" onClick={exportCSV} />\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    const nameBodyTemplate = (rowData) => {\r\n        return (\r\n            <span\r\n            style={{\r\n                cursor: 'pointer',\r\n                color: 'blue',\r\n                \r\n            }}\r\n            onClick={() => openEdit(rowData)}\r\n        >\r\n            {rowData.unit_name}\r\n        </span>\r\n        );\r\n    };\r\n\r\n    const unitBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Created By</span>\r\n                {rowData.created_by}\r\n            </>\r\n        );\r\n    };\r\n\r\n    const statusBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Status</span>\r\n                <Badge\r\n                    value={rowData.status === 1 ? 'Active' : 'Inactive'}\r\n                    severity={rowData.status === 1 ? 'success' : 'danger'}\r\n                    className=\"ml-2\"\r\n                />\r\n            </>\r\n        );\r\n    };  \r\n\r\n    const handleNextPage = () => {\r\n        setPaginationData(prev => {\r\n            const nextPage = prev.page + 1;\r\n            return { ...prev, page: nextPage > prev.totalPages ? prev.totalPages : nextPage };\r\n        });\r\n    };\r\n    const handlePreviousPage = () => {\r\n        setPaginationData(prev => {\r\n            const previousPage = prev.page - 1;\r\n            return { ...prev, page: previousPage < 1 ? 1 : previousPage };\r\n        });\r\n    };\r\n\r\n    const actionBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-success mr-1\" onClick={() => openEdit (rowData)} />\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => confirmDeleteMerk(rowData)} />\r\n            </>\r\n        );\r\n    };\r\n\r\n    const header = (\r\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\r\n            <h5 className=\"m-0\">Manage Merks</h5>\r\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\r\n                <i className=\"pi pi-search\" />\r\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\r\n            </span>\r\n        </div>\r\n    );\r\n\r\n    const deleteMerkDialogFooter = (\r\n        <>\r\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteMerkDialog} />\r\n            <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deleteMerk} />\r\n        </>\r\n    );\r\n    const deleteMerksDialogFooter = (\r\n        <>\r\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteMerksDialog} />\r\n            <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={bulkDeleteSelectedMerks} />\r\n\r\n        </>\r\n    );\r\n\r\n    const nomorBodyTemplate = (_, { rowIndex }) => {\r\n        // Calculate the row number based on the current page and rows per page\r\n        const nomor = (paginationData.page - 1) * rowsPerPage + rowIndex + 1;\r\n        return (\r\n            <span>{nomor}</span>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"grid crud-demo\">\r\n            <div className=\"col-12\">\r\n                <div className=\"card\">\r\n                    <Toast ref={toast} />\r\n                    <Toolbar className=\"mb-4\" left={leftToolbarTemplate} right={rightToolbarTemplate}></Toolbar>\r\n\r\n                    <DataTable\r\n                       ref={dt}\r\n                       value={units}\r\n                       selection={selectedMerks}\r\n                       onSelectionChange={(e) => setSelectedMerks(e.value)}\r\n                       dataKey=\"id\"\r\n                       className=\"datatable-responsive\"\r\n                       globalFilter={globalFilter}\r\n                       emptyMessage=\"No units found.\"\r\n                       header={header}\r\n                       responsiveLayout=\"scroll\"                   \r\n                    >\r\n                        <Column selectionMode=\"multiple\" headerStyle={{ width: '4rem' }}></Column>\r\n                        <Column field=\"nomor\" header=\"No\" body={nomorBodyTemplate} style={{ width: '5%' }} />\r\n\r\n                        <Column field=\"unit_name\" header=\"Name\" sortable body={nameBodyTemplate} headerStyle={{ minWidth: '10rem' }}></Column>\r\n                        <Column field=\"created_by\" header=\"Created By\" sortable body={unitBodyTemplate}></Column>\r\n                        <Column field=\"status\" header=\"Status\" body={statusBodyTemplate}></Column>\r\n                        <Column field=\"action\" body={actionBodyTemplate} ></Column>\r\n                    </DataTable>\r\n\r\n                    <div className=\"paginator-buttons\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                    <div className=\"flex justify-content-between align-items-center\">\r\n                        <Button icon=\"pi pi-angle-left\" className=\"p-button-text\" onClick={handlePreviousPage} disabled={paginationData.page === 1} />\r\n                        <span>{`Page ${paginationData.page} of ${paginationData.totalPages }`}</span>\r\n                        <Button icon=\"pi pi-angle-right\" className=\"p-button-text\" onClick={handleNextPage} disabled={paginationData.page === paginationData.totalPages} />\r\n                        <span>{`Inventory ${paginationData.totalRows } Merks`}</span>\r\n                    </div>\r\n                                <Dropdown\r\n                        value={rowsPerPage}\r\n                        options={[10, 25, 50]} // Opsi untuk jumlah baris per halaman\r\n                            onChange={(e) => handleRowsPerPageChange(e.value)} // Panggil fungsi ketika nilai dropdown diubah\r\n                            placeholder=\"Rows per page\"\r\n                            className=\"ml-2\"\r\n                        />\r\n                </div>              \r\n                        <MerkCreateDialog\r\n                        visible={unitDialog}\r\n                        unit={unit}\r\n                        setMerk={setMerk}\r\n                        hideDialog={hideDialog}\r\n                        saveMerk={saveMerk}\r\n                        submitted={submitted}\r\n                        />\r\n                         <MerkUpdateDialog\r\n                            visible={unitUpdateDialog}\r\n                            unit={unit}\r\n                            setMerk={setMerk}\r\n                            hideDialog={hideUpdateDialog}\r\n                            updateMerk={updateMerk}\r\n                            submitted={submitted}\r\n                        />\r\n\r\n                    <Dialog visible={deleteMerkDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteMerkDialogFooter} onHide={hideDeleteMerkDialog}>\r\n                        <div className=\"flex align-items-center justify-content-center\">\r\n                            <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\r\n                            {unit && (\r\n                                <span>\r\n                                    Are you sure you want to delete <b>{unit.unit_name}</b>?\r\n                                </span>\r\n                            )}\r\n                        </div>\r\n                    </Dialog>\r\n\r\n                    <Dialog visible={deleteMerksDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteMerksDialogFooter} onHide={hideDeleteMerksDialog}>\r\n                        <div className=\"flex align-items-center justify-content-center\">\r\n                            <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\r\n                            {unit && <span>Are you sure you want to delete the selected units?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withAuth(Inventory);\r\n"
        }
    ]
}