{
    "sourceFile": "pages/pages/permission/Dialogs/PermissionCreateDialog.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1736923075638,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1736923093812,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,15 +5,15 @@\n import { classNames } from 'primereact/utils';\r\n import { RadioButton } from 'primereact/radiobutton';\r\n import { InputTextarea } from 'primereact/inputtextarea';\r\n \r\n-const RoleCreateDialog = ({ visible, permission, setRole, hideDialog, saveRole, submitted }) => {\r\n+const PermissionCreateDialog = ({ visible, permission, setPermission, hideDialog, savePermission, submitted }) => {\r\n     const [imagePreview, setImagePreview] = useState(null); // State to store image preview URL\r\n     const [imageFile, setImageFile] = useState(null); // State to store the image file for submission\r\n    \r\n     const onStatusChange = (e) => {\r\n-        setRole(prevRole => ({\r\n-            ...prevRole,\r\n+        setPermission(prevPermission => ({\r\n+            ...prevPermission,\r\n             status: e.value === \"Active\" ? 1 : 2, \r\n         }));\r\n     };\r\n \r\n@@ -21,33 +21,33 @@\n         let val = (e.target && e.target.value) || '';\r\n \r\n         let _permission = { ...permission };\r\n         _permission[name] = ['stock', 'minimal_stock', 'price'].includes(name) ? parseInt(val) || 0 : val;\r\n-        setRole(_permission);\r\n+        setPermission(_permission);\r\n     };\r\n \r\n     const permissionDialogFooter = (\r\n         <>\r\n             <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog} />\r\n-            <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={saveRole} />\r\n+            <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={savePermission} />\r\n         </>\r\n     );\r\n \r\n     return (\r\n-        <Dialog visible={visible} style={{ width: '600px' }} header=\"Role Details\" modal className=\"p-fluid\" footer={permissionDialogFooter} onHide={hideDialog}>\r\n+        <Dialog visible={visible} style={{ width: '600px' }} header=\"Permission Details\" modal className=\"p-fluid\" footer={permissionDialogFooter} onHide={hideDialog}>\r\n             <div className=\"field\">\r\n-                <label htmlFor=\"permission\">Role name</label>\r\n+                <label htmlFor=\"permission\">Permission name</label>\r\n                 <InputText\r\n                     id=\"permission\"\r\n                     value={permission.permission}\r\n                     onChange={(e) => onInputChange(e, 'permission')}\r\n                     required\r\n                     autoFocus\r\n                     className={classNames({ 'p-invalid': submitted && !permission.permission })}\r\n                 />\r\n-                {submitted && !permission.permission && <small className=\"p-invalid\">Role name is required. Please provide a valid name.</small>}\r\n+                {submitted && !permission.permission && <small className=\"p-invalid\">Permission name is required. Please provide a valid name.</small>}\r\n             </div>\r\n         </Dialog>\r\n     );\r\n };\r\n \r\n-export default RoleCreateDialog;\r\n+export default PermissionCreateDialog;\r\n"
                },
                {
                    "date": 1736923320042,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,51 +2,75 @@\n import { Dialog } from 'primereact/dialog';\r\n import { Button } from 'primereact/button';\r\n import { InputText } from 'primereact/inputtext';\r\n import { classNames } from 'primereact/utils';\r\n-import { RadioButton } from 'primereact/radiobutton';\r\n import { InputTextarea } from 'primereact/inputtextarea';\r\n \r\n const PermissionCreateDialog = ({ visible, permission, setPermission, hideDialog, savePermission, submitted }) => {\r\n-    const [imagePreview, setImagePreview] = useState(null); // State to store image preview URL\r\n-    const [imageFile, setImageFile] = useState(null); // State to store the image file for submission\r\n-   \r\n-    const onStatusChange = (e) => {\r\n-        setPermission(prevPermission => ({\r\n-            ...prevPermission,\r\n-            status: e.value === \"Active\" ? 1 : 2, \r\n-        }));\r\n-    };\r\n-\r\n+    // Handle input change for the fields\r\n     const onInputChange = (e, name) => {\r\n         let val = (e.target && e.target.value) || '';\r\n-\r\n+        \r\n+        // Update the permission object with new field values\r\n         let _permission = { ...permission };\r\n-        _permission[name] = ['stock', 'minimal_stock', 'price'].includes(name) ? parseInt(val) || 0 : val;\r\n-        setPermission(_permission);\r\n+        _permission[name] = val;\r\n+        setPermission(_permission); // Update the state\r\n     };\r\n \r\n+    // Dialog footer with Cancel and Save buttons\r\n     const permissionDialogFooter = (\r\n         <>\r\n             <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog} />\r\n             <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={savePermission} />\r\n         </>\r\n     );\r\n \r\n     return (\r\n-        <Dialog visible={visible} style={{ width: '600px' }} header=\"Permission Details\" modal className=\"p-fluid\" footer={permissionDialogFooter} onHide={hideDialog}>\r\n+        <Dialog \r\n+            visible={visible} \r\n+            style={{ width: '600px' }} \r\n+            header=\"Permission Details\" \r\n+            modal \r\n+            className=\"p-fluid\" \r\n+            footer={permissionDialogFooter} \r\n+            onHide={hideDialog}\r\n+        >\r\n             <div className=\"field\">\r\n-                <label htmlFor=\"permission\">Permission name</label>\r\n+                <label htmlFor=\"label\">Label</label>\r\n                 <InputText\r\n-                    id=\"permission\"\r\n-                    value={permission.permission}\r\n-                    onChange={(e) => onInputChange(e, 'permission')}\r\n+                    id=\"label\"\r\n+                    value={permission.label}\r\n+                    onChange={(e) => onInputChange(e, 'label')}\r\n                     required\r\n                     autoFocus\r\n-                    className={classNames({ 'p-invalid': submitted && !permission.permission })}\r\n+                    className={classNames({ 'p-invalid': submitted && !permission.label })}\r\n                 />\r\n-                {submitted && !permission.permission && <small className=\"p-invalid\">Permission name is required. Please provide a valid name.</small>}\r\n+                {submitted && !permission.label && <small className=\"p-invalid\">Label is required. Please provide a valid label.</small>}\r\n             </div>\r\n+\r\n+            <div className=\"field\">\r\n+                <label htmlFor=\"icon\">Icon</label>\r\n+                <InputText\r\n+                    id=\"icon\"\r\n+                    value={permission.icon}\r\n+                    onChange={(e) => onInputChange(e, 'icon')}\r\n+                    required\r\n+                    className={classNames({ 'p-invalid': submitted && !permission.icon })}\r\n+                />\r\n+                {submitted && !permission.icon && <small className=\"p-invalid\">Icon is required. Please provide a valid icon.</small>}\r\n+            </div>\r\n+\r\n+            <div className=\"field\">\r\n+                <label htmlFor=\"to\">To (URL)</label>\r\n+                <InputText\r\n+                    id=\"to\"\r\n+                    value={permission.to}\r\n+                    onChange={(e) => onInputChange(e, 'to')}\r\n+                    required\r\n+                    className={classNames({ 'p-invalid': submitted && !permission.to })}\r\n+                />\r\n+                {submitted && !permission.to && <small className=\"p-invalid\">URL is required. Please provide a valid URL.</small>}\r\n+            </div>\r\n         </Dialog>\r\n     );\r\n };\r\n \r\n"
                }
            ],
            "date": 1736923075637,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Button } from 'primereact/button';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { classNames } from 'primereact/utils';\r\nimport { RadioButton } from 'primereact/radiobutton';\r\nimport { InputTextarea } from 'primereact/inputtextarea';\r\n\r\nconst RoleCreateDialog = ({ visible, permission, setRole, hideDialog, saveRole, submitted }) => {\r\n    const [imagePreview, setImagePreview] = useState(null); // State to store image preview URL\r\n    const [imageFile, setImageFile] = useState(null); // State to store the image file for submission\r\n   \r\n    const onStatusChange = (e) => {\r\n        setRole(prevRole => ({\r\n            ...prevRole,\r\n            status: e.value === \"Active\" ? 1 : 2, \r\n        }));\r\n    };\r\n\r\n    const onInputChange = (e, name) => {\r\n        let val = (e.target && e.target.value) || '';\r\n\r\n        let _permission = { ...permission };\r\n        _permission[name] = ['stock', 'minimal_stock', 'price'].includes(name) ? parseInt(val) || 0 : val;\r\n        setRole(_permission);\r\n    };\r\n\r\n    const permissionDialogFooter = (\r\n        <>\r\n            <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog} />\r\n            <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={saveRole} />\r\n        </>\r\n    );\r\n\r\n    return (\r\n        <Dialog visible={visible} style={{ width: '600px' }} header=\"Role Details\" modal className=\"p-fluid\" footer={permissionDialogFooter} onHide={hideDialog}>\r\n            <div className=\"field\">\r\n                <label htmlFor=\"permission\">Role name</label>\r\n                <InputText\r\n                    id=\"permission\"\r\n                    value={permission.permission}\r\n                    onChange={(e) => onInputChange(e, 'permission')}\r\n                    required\r\n                    autoFocus\r\n                    className={classNames({ 'p-invalid': submitted && !permission.permission })}\r\n                />\r\n                {submitted && !permission.permission && <small className=\"p-invalid\">Role name is required. Please provide a valid name.</small>}\r\n            </div>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default RoleCreateDialog;\r\n"
        }
    ]
}