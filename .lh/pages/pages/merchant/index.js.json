{
    "sourceFile": "pages/pages/merchant/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 19,
            "patches": [
                {
                    "date": 1736742294444,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1736742331947,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n         owner_name: '',\r\n         merchant_name: '',\r\n         address: '',\r\n         city: '',\r\n-        country: 0,\r\n+        country: null,\r\n         currency: '',\r\n         zip: '',\r\n         phone: '',\r\n     });\r\n"
                },
                {
                    "date": 1736743556300,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,8 +32,11 @@\n             { name: 'Singapore', code: 2 },\r\n         ]);\r\n     }, []);\r\n \r\n+    useEffect(() => {\r\n+        loadMerchantData();\r\n+    }, []);\r\n    \r\n     const handleToggle = (field) => {\r\n         setMerchantData((prevData) => ({\r\n             ...prevData,\r\n"
                },
                {
                    "date": 1736743584035,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,8 @@\n     const [qrCodeValue, setQrCodeValue] = useState('');\r\n     const [isLoading, setIsLoading] = useState(false);\r\n \r\n     useEffect(() => {\r\n-        // Initialize the dropdown items\r\n         setDropdownItems([\r\n             { name: 'Indonesia', code: 1 },\r\n             { name: 'Singapore', code: 2 },\r\n         ]);\r\n"
                },
                {
                    "date": 1736744023655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,8 +20,9 @@\n         phone: '',\r\n     });\r\n \r\n     const [dropdownItems, setDropdownItems] = useState([]);\r\n+    const [dropdownCurrency, setDropdownCurrency] = useState([]);\r\n     const [signupData, setSignupData] = useState({ email: '', password: '' });\r\n     const [qrCodeValue, setQrCodeValue] = useState('');\r\n     const [isLoading, setIsLoading] = useState(false);\r\n \r\n@@ -29,8 +30,13 @@\n         setDropdownItems([\r\n             { name: 'Indonesia', code: 1 },\r\n             { name: 'Singapore', code: 2 },\r\n         ]);\r\n+        setDropdownCurrency([\r\n+            { name: '$', code: '$' },\r\n+            { name: 'Rp', code: 'Rp' },\r\n+        ]);\r\n+\r\n     }, []);\r\n \r\n     useEffect(() => {\r\n         loadMerchantData();\r\n@@ -166,8 +172,20 @@\n                                 onChange={(e) => handleToggle('country', e.value)}\r\n                             />\r\n                         </div>\r\n                         <div className=\"field col-12 md:col-3\">\r\n+                            <label htmlFor=\"currency\">Currency</label>\r\n+                            <Dropdown\r\n+                                id=\"currency\"\r\n+                                value={merchantData.country}\r\n+                                options={dropdownCurrency}\r\n+                                optionLabel=\"name\"\r\n+                                optionValue=\"code\"\r\n+                                placeholder=\"Select One\"\r\n+                                onChange={(e) => handleToggle('currency', e.value)}\r\n+                            />\r\n+                        </div>\r\n+                        <div className=\"field col-12 md:col-3\">\r\n                             <label htmlFor=\"zip\">Zip</label>\r\n                             <InputText\r\n                                 id=\"zip\"\r\n                                 value={merchantData.zip || ''}\r\n"
                },
                {
                    "date": 1736744064682,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,15 +30,15 @@\n         setDropdownItems([\r\n             { name: 'Indonesia', code: 1 },\r\n             { name: 'Singapore', code: 2 },\r\n         ]);\r\n-        setDropdownCurrency([\r\n-            { name: '$', code: '$' },\r\n-            { name: 'Rp', code: 'Rp' },\r\n-        ]);\r\n-\r\n     }, []);\r\n \r\n+    setDropdownCurrency([\r\n+        { name: '$', code: '$' },\r\n+        { name: 'Rp', code: 'Rp' },\r\n+    ]);\r\n+\r\n     useEffect(() => {\r\n         loadMerchantData();\r\n     }, []);\r\n    \r\n"
                },
                {
                    "date": 1736744102610,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,15 +31,15 @@\n             { name: 'Indonesia', code: 1 },\r\n             { name: 'Singapore', code: 2 },\r\n         ]);\r\n     }, []);\r\n-\r\n-    setDropdownCurrency([\r\n-        { name: '$', code: '$' },\r\n-        { name: 'Rp', code: 'Rp' },\r\n-    ]);\r\n-\r\n     useEffect(() => {\r\n+        setDropdownCurrency([\r\n+            { name: '$', code: '$' },\r\n+            { name: 'Rp', code: 'Rp' },\r\n+        ]);\r\n+    }, []);\r\n+    useEffect(() => {\r\n         loadMerchantData();\r\n     }, []);\r\n    \r\n     const handleToggle = (field) => {\r\n"
                },
                {
                    "date": 1736744213489,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,30 +13,30 @@\n         owner_name: '',\r\n         merchant_name: '',\r\n         address: '',\r\n         city: '',\r\n-        country: null,\r\n-        currency: '',\r\n+        country: '',\r\n+        currency: null,\r\n         zip: '',\r\n         phone: '',\r\n     });\r\n \r\n-    const [dropdownItems, setDropdownItems] = useState([]);\r\n+    const [dropdownCountry, setDropdownCountry] = useState([]);\r\n     const [dropdownCurrency, setDropdownCurrency] = useState([]);\r\n     const [signupData, setSignupData] = useState({ email: '', password: '' });\r\n     const [qrCodeValue, setQrCodeValue] = useState('');\r\n     const [isLoading, setIsLoading] = useState(false);\r\n \r\n     useEffect(() => {\r\n-        setDropdownItems([\r\n+        setDropdownCountry([\r\n             { name: 'Indonesia', code: 1 },\r\n             { name: 'Singapore', code: 2 },\r\n         ]);\r\n     }, []);\r\n     useEffect(() => {\r\n         setDropdownCurrency([\r\n-            { name: '$', code: '$' },\r\n-            { name: 'Rp', code: 'Rp' },\r\n+            { name: '$', code: 1 },\r\n+            { name: 'Rp', code: 2 },\r\n         ]);\r\n     }, []);\r\n     useEffect(() => {\r\n         loadMerchantData();\r\n@@ -164,9 +164,9 @@\n                             <label htmlFor=\"country\">Country</label>\r\n                             <Dropdown\r\n                                 id=\"country\"\r\n                                 value={merchantData.country}\r\n-                                options={dropdownItems}\r\n+                                options={dropdownCountry}\r\n                                 optionLabel=\"name\"\r\n                                 optionValue=\"code\"\r\n                                 placeholder=\"Select One\"\r\n                                 onChange={(e) => handleToggle('country', e.value)}\r\n"
                },
                {
                    "date": 1736744279841,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,10 +27,10 @@\n     const [isLoading, setIsLoading] = useState(false);\r\n \r\n     useEffect(() => {\r\n         setDropdownCountry([\r\n-            { name: 'Indonesia', code: 1 },\r\n-            { name: 'Singapore', code: 2 },\r\n+            { name: 'Indonesia', code: 'ID' },\r\n+            { name: 'Singapore', code:  'SGP'},\r\n         ]);\r\n     }, []);\r\n     useEffect(() => {\r\n         setDropdownCurrency([\r\n"
                },
                {
                    "date": 1736744996334,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -175,9 +175,9 @@\n                         <div className=\"field col-12 md:col-3\">\r\n                             <label htmlFor=\"currency\">Currency</label>\r\n                             <Dropdown\r\n                                 id=\"currency\"\r\n-                                value={merchantData.country}\r\n+                                value={merchantData.currency}\r\n                                 options={dropdownCurrency}\r\n                                 optionLabel=\"name\"\r\n                                 optionValue=\"code\"\r\n                                 placeholder=\"Select One\"\r\n"
                },
                {
                    "date": 1736745066257,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,9 +88,9 @@\n     const handleUpdate = async () => {\r\n         if (!validateForm()) return;\r\n         try {\r\n             setIsLoading(true);\r\n-            const payload = { ...merchantData, country: merchantData.country };\r\n+            const payload = { ...merchantData, country: merchantData.currency };\r\n             const response = await updateMerchantData(payload);\r\n             alert(response.status ? 'Data updated successfully' : 'Update failed');\r\n         } catch (error) {\r\n             console.error('Error updating merchant data:', error);\r\n"
                },
                {
                    "date": 1736745156551,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n         owner_name: '',\r\n         merchant_name: '',\r\n         address: '',\r\n         city: '',\r\n-        country: '',\r\n+        country: null,\r\n         currency: null,\r\n         zip: '',\r\n         phone: '',\r\n     });\r\n"
                },
                {
                    "date": 1736745175672,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n         owner_name: '',\r\n         merchant_name: '',\r\n         address: '',\r\n         city: '',\r\n-        country: null,\r\n+        country: '',\r\n         currency: null,\r\n         zip: '',\r\n         phone: '',\r\n     });\r\n@@ -27,10 +27,10 @@\n     const [isLoading, setIsLoading] = useState(false);\r\n \r\n     useEffect(() => {\r\n         setDropdownCountry([\r\n-            { name: 'Indonesia', code: 'ID' },\r\n-            { name: 'Singapore', code:  'SGP'},\r\n+            { name: 'Indonesia', code: 1 },\r\n+            { name: 'Singapore', code:  1},\r\n         ]);\r\n     }, []);\r\n     useEffect(() => {\r\n         setDropdownCurrency([\r\n"
                },
                {
                    "date": 1736745306070,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,11 +28,12 @@\n \r\n     useEffect(() => {\r\n         setDropdownCountry([\r\n             { name: 'Indonesia', code: 1 },\r\n-            { name: 'Singapore', code:  1},\r\n+            { name: 'Singapore', code:  2},\r\n         ]);\r\n     }, []);\r\n+\r\n     useEffect(() => {\r\n         setDropdownCurrency([\r\n             { name: '$', code: 1 },\r\n             { name: 'Rp', code: 2 },\r\n@@ -168,9 +169,9 @@\n                                 options={dropdownCountry}\r\n                                 optionLabel=\"name\"\r\n                                 optionValue=\"code\"\r\n                                 placeholder=\"Select One\"\r\n-                                onChange={(e) => handleToggle('country', e.value)}\r\n+                                onChange={(e) => handleChange('country', e.value)}\r\n                             />\r\n                         </div>\r\n                         <div className=\"field col-12 md:col-3\">\r\n                             <label htmlFor=\"currency\">Currency</label>\r\n@@ -180,9 +181,9 @@\n                                 options={dropdownCurrency}\r\n                                 optionLabel=\"name\"\r\n                                 optionValue=\"code\"\r\n                                 placeholder=\"Select One\"\r\n-                                onChange={(e) => handleToggle('currency', e.value)}\r\n+                                onChange={(e) => handleChange('currency', e.value)}\r\n                             />\r\n                         </div>\r\n                         <div className=\"field col-12 md:col-3\">\r\n                             <label htmlFor=\"zip\">Zip</label>\r\n"
                },
                {
                    "date": 1736745340827,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,9 +89,9 @@\n     const handleUpdate = async () => {\r\n         if (!validateForm()) return;\r\n         try {\r\n             setIsLoading(true);\r\n-            const payload = { ...merchantData, country: merchantData.currency };\r\n+            const payload = { ...merchantData };\r\n             const response = await updateMerchantData(payload);\r\n             alert(response.status ? 'Data updated successfully' : 'Update failed');\r\n         } catch (error) {\r\n             console.error('Error updating merchant data:', error);\r\n"
                },
                {
                    "date": 1736745356022,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,10 +27,10 @@\n     const [isLoading, setIsLoading] = useState(false);\r\n \r\n     useEffect(() => {\r\n         setDropdownCountry([\r\n-            { name: 'Indonesia', code: 1 },\r\n-            { name: 'Singapore', code:  2},\r\n+            { name: 'Indonesia', code: 'ID' },\r\n+            { name: 'Singapore', code:  'sgp'},\r\n         ]);\r\n     }, []);\r\n \r\n     useEffect(() => {\r\n"
                },
                {
                    "date": 1736761158078,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n \r\n     useEffect(() => {\r\n         setDropdownCountry([\r\n             { name: 'Indonesia', code: 'ID' },\r\n-            { name: 'Singapore', code:  'sgp'},\r\n+            { name: 'Singapore', code:  'SGP'},\r\n         ]);\r\n     }, []);\r\n \r\n     useEffect(() => {\r\n@@ -79,12 +79,13 @@\n     \r\n     const handleChange = (field, value) => {\r\n         setMerchantData((prevData) => ({\r\n             ...prevData,\r\n-            [field]: ['zip', 'phone'].includes(field) && value ? value.replace(/\\D/g, '') : value,\r\n+            [field]: ['zip', 'phone'].includes(field) && value \r\n+                ? value.replace(/\\D/g, '') \r\n+                : value.trim(), // Pangkas spasi di awal/akhir\r\n         }));\r\n     };\r\n-\r\n    \r\n \r\n     const handleUpdate = async () => {\r\n         if (!validateForm()) return;\r\n"
                },
                {
                    "date": 1736761189180,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,15 +41,8 @@\n     }, []);\r\n     useEffect(() => {\r\n         loadMerchantData();\r\n     }, []);\r\n-   \r\n-    const handleToggle = (field) => {\r\n-        setMerchantData((prevData) => ({\r\n-            ...prevData,\r\n-            [field]: !prevData[field],\r\n-        }));\r\n-    };\r\n \r\n     const loadMerchantData = async () => {\r\n         try {\r\n             setIsLoading(true);\r\n"
                },
                {
                    "date": 1736761232341,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,9 +78,8 @@\n                 : value.trim(), // Pangkas spasi di awal/akhir\r\n         }));\r\n     };\r\n    \r\n-\r\n     const handleUpdate = async () => {\r\n         if (!validateForm()) return;\r\n         try {\r\n             setIsLoading(true);\r\n"
                },
                {
                    "date": 1736761238832,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n             if (response.status && response.data) {\r\n                 const merchant = response.data;\r\n                 setMerchantData({\r\n                     id: merchant.id,\r\n-                    owner_name: merchant.update_by, // Mapping 'update_by' as the owner\r\n+                    owner_name: merchant.update_by,\r\n                     merchant_name: merchant.merchant_name,\r\n                     address: merchant.address,\r\n                     city: merchant.city,\r\n                     country: merchant.country, \r\n"
                }
            ],
            "date": 1736742294444,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from 'react';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Button } from 'primereact/button';\r\nimport { InputTextarea } from 'primereact/inputtextarea';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { Checkbox } from 'primereact/checkbox';\r\nimport QRCode from 'react-qr-code';\r\nimport { fetchMerchantData, updateMerchantData, generateAuthenticatorCode } from '../merchant/api';\r\n\r\nconst Merchant = () => {\r\n    const [merchantData, setMerchantData] = useState({\r\n        id: '',\r\n        owner_name: '',\r\n        merchant_name: '',\r\n        address: '',\r\n        city: '',\r\n        country: 0,\r\n        currency: '',\r\n        zip: '',\r\n        phone: '',\r\n    });\r\n\r\n    const [dropdownItems, setDropdownItems] = useState([]);\r\n    const [signupData, setSignupData] = useState({ email: '', password: '' });\r\n    const [qrCodeValue, setQrCodeValue] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        // Initialize the dropdown items\r\n        setDropdownItems([\r\n            { name: 'Indonesia', code: 1 },\r\n            { name: 'Singapore', code: 2 },\r\n        ]);\r\n    }, []);\r\n\r\n   \r\n    const handleToggle = (field) => {\r\n        setMerchantData((prevData) => ({\r\n            ...prevData,\r\n            [field]: !prevData[field],\r\n        }));\r\n    };\r\n\r\n    const loadMerchantData = async () => {\r\n        try {\r\n            setIsLoading(true);\r\n            const response = await fetchMerchantData();\r\n            if (response.status && response.data) {\r\n                const merchant = response.data;\r\n                setMerchantData({\r\n                    id: merchant.id,\r\n                    owner_name: merchant.update_by, // Mapping 'update_by' as the owner\r\n                    merchant_name: merchant.merchant_name,\r\n                    address: merchant.address,\r\n                    city: merchant.city,\r\n                    country: merchant.country, \r\n                    currency: merchant.currency,\r\n                    zip: merchant.zip,\r\n                    phone: merchant.phone,\r\n                });\r\n            } else {\r\n                alert('Failed to fetch merchant data');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching merchant data:', error);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n    \r\n    const handleChange = (field, value) => {\r\n        setMerchantData((prevData) => ({\r\n            ...prevData,\r\n            [field]: ['zip', 'phone'].includes(field) && value ? value.replace(/\\D/g, '') : value,\r\n        }));\r\n    };\r\n\r\n   \r\n\r\n    const handleUpdate = async () => {\r\n        if (!validateForm()) return;\r\n        try {\r\n            setIsLoading(true);\r\n            const payload = { ...merchantData, country: merchantData.country };\r\n            const response = await updateMerchantData(payload);\r\n            alert(response.status ? 'Data updated successfully' : 'Update failed');\r\n        } catch (error) {\r\n            console.error('Error updating merchant data:', error);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const validateForm = () => {\r\n        if (!merchantData.merchant_name || !merchantData.phone) {\r\n            alert(\"Merchant Name and Phone are required.\");\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    const handleSignup = () => {\r\n        const dummyCredentials = { email: 'testUser', password: 'testPassword' };\r\n\r\n        if (signupData.email === dummyCredentials.email && signupData.password === dummyCredentials.password) {\r\n            const newQRCode = generateAuthenticatorCode(merchantData.merchant_name);\r\n            setQrCodeValue(newQRCode);\r\n        } else {\r\n            alert('Signup failed. Please check your credentials.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"grid\">\r\n            <div className=\"col-12\">\r\n                <div className=\"card\">\r\n                    <h5>Merchant</h5>\r\n                    <div className=\"p-fluid formgrid grid\">\r\n                        <div className=\"field col-12 md:col-6\">\r\n                            <label htmlFor=\"Owner Name\">Owner Name</label>\r\n                            <InputText\r\n                                id=\"owner\"\r\n                                type=\"text\"\r\n                                value={merchantData.owner_name}\r\n                                onChange={(e) => handleChange('owner_name', e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"field col-12 md:col-6\">\r\n                            <label htmlFor=\"Merchant Name\">Merchant Name</label>\r\n                            <InputText\r\n                                id=\"merchant_name\"\r\n                                type=\"text\"\r\n                                value={merchantData.merchant_name}\r\n                                onChange={(e) => handleChange('merchant_name', e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"field col-12\">\r\n                            <label htmlFor=\"address\">Address</label>\r\n                            <InputTextarea\r\n                                id=\"address\"\r\n                                rows=\"4\"\r\n                                value={merchantData.address}\r\n                                onChange={(e) => handleChange('address', e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"field col-12 md:col-6\">\r\n                            <label htmlFor=\"city\">City</label>\r\n                            <InputText\r\n                                id=\"city\"\r\n                                type=\"text\"\r\n                                value={merchantData.city}\r\n                                onChange={(e) => handleChange('city', e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"field col-12 md:col-3\">\r\n                            <label htmlFor=\"country\">Country</label>\r\n                            <Dropdown\r\n                                id=\"country\"\r\n                                value={merchantData.country}\r\n                                options={dropdownItems}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"code\"\r\n                                placeholder=\"Select One\"\r\n                                onChange={(e) => handleToggle('country', e.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"field col-12 md:col-3\">\r\n                            <label htmlFor=\"zip\">Zip</label>\r\n                            <InputText\r\n                                id=\"zip\"\r\n                                value={merchantData.zip || ''}\r\n                                onChange={(e) => handleChange('zip', e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"field col-12 md:col-3\">\r\n                            <label htmlFor=\"phone\">Phone</label>\r\n                            <InputText\r\n                                id=\"phone\"\r\n                                type=\"number\"\r\n                                value={merchantData.phone || ''}\r\n                                onChange={(e) => handleChange('phone', e.target.value)}\r\n                            />\r\n                        </div>\r\n                       <Button label={isLoading ? 'Updating...' : 'Update'} onClick={handleUpdate} disabled={isLoading} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"col-12 md:col-6\">\r\n                <div className=\"card p-fluid\">\r\n                    <h5>Authenticator</h5>\r\n                    <div className=\"field\">\r\n                        {qrCodeValue && <QRCode value={qrCodeValue} size={200} />}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-12 md:col-3\">\r\n                <div className=\"card\">\r\n                    <h5>Signup</h5>\r\n                    <div className=\"p-fluid\">\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"email\">email</label>\r\n                            <InputText\r\n                                id=\"email\"\r\n                                value={signupData.email}\r\n                                onChange={(e) => setSignupData({ ...signupData, email: e.target.value })}\r\n                            />\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <InputText\r\n                                id=\"password\"\r\n                                type=\"password\"\r\n                                value={signupData.password}\r\n                                onChange={(e) => setSignupData({ ...signupData, password: e.target.value })}\r\n                            />\r\n                        </div>\r\n                        <Button label=\"Signup\" onClick={handleSignup} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Merchant;"
        }
    ]
}