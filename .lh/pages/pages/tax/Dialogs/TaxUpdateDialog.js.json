{
    "sourceFile": "pages/pages/tax/Dialogs/TaxUpdateDialog.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1736822030265,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1736822030265,
            "name": "Commit-0",
            "content": "import React from 'react';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Button } from 'primereact/button';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { classNames } from 'primereact/utils';\r\nimport { RadioButton } from 'primereact/radiobutton';\r\n\r\nconst TaxUpdateDialog = ({ visible, tax, setTax, hideDialog, updateTax, submitted }) => {\r\n    const onInputChange = (e, name) => {\r\n        let val = (e.target && e.target.value.trim()); // Trim spasi di awal/akhir\r\n\r\n        let _tax = { ...tax };\r\n        if (name === 'tax_percentage') {\r\n            // Parse to float and ensure it's within range\r\n            const parsedVal = parseFloat(val) || 0;\r\n            if (parsedVal >= 0 && parsedVal <= 100) {\r\n                _tax[name] = parsedVal;\r\n            }\r\n        } else {\r\n            _tax[name] = val;\r\n        }\r\n        setTax(_tax);\r\n    };\r\n    \r\n    const onStatusChange = (e) => {\r\n        const value = e.value; \r\n        setTax(prevTax => ({ ...prevTax, status: value }));\r\n    };\r\n\r\n    const taxDialogFooter = (\r\n        <>\r\n            <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog} />\r\n            <Button label=\"Update\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={updateTax} />\r\n        </>\r\n    );\r\n\r\n    return (\r\n        <Dialog visible={visible} style={{ width: '450px' }} header=\"Update Tax\" modal className=\"p-fluid\" footer={taxDialogFooter} onHide={hideDialog}>\r\n            {tax.image && <img src={`${tax.image}`} alt={tax.image} width=\"150\" className=\"mt-0 mx-auto mb-5 block shadow-2\" />}\r\n            \r\n            <div className=\"field\">\r\n                <label htmlFor=\"id\">Tax ID</label>\r\n                <InputText id=\"id\" value={tax.id} onChange={(e) => onInputChange(e, 'id')} disabled />\r\n            </div>\r\n            <div className=\"field\">\r\n                <label htmlFor=\"tax\">Tax Name</label>\r\n                <InputText id=\"tax\" value={tax.tax} onChange={(e) => onInputChange(e, 'tax')} required autoFocus className={classNames({ 'p-invalid': submitted && !tax.tax })} />\r\n                {submitted && !tax.tax && <small className=\"p-invalid\">Tax name is required.</small>}\r\n            </div>\r\n            <div className=\"field\">\r\n                            <label htmlFor=\"tax_percentage\">Tax Percentage</label>\r\n                            <div className=\"p-inputgroup\" style={{ maxWidth: '200px' }}>\r\n                            <InputText id=\"tax_percentage\" \r\n                            value={tax.tax_percentage} onChange={(e) => onInputChange(e, 'tax_percentage')} \r\n                            required \r\n                                    className={classNames({ 'p-invalid': submitted && (tax.tax_percentage < 0 || tax.tax_percentage > 100) })}\r\n                            />\r\n                            <span className=\"p-inputgroup-addon\">%</span>\r\n                            </div>\r\n                            {submitted && (tax.tax_percentage < 0 || tax.tax_percentage > 100) && (\r\n                                <small className=\"p-invalid\">Tax must be between 0% and 100%.</small>\r\n                            )}\r\n                        </div>\r\n            <div className=\"field\" style={{ display: 'flex', gap: '1rem' }}></div>\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"description\">Description</label>\r\n                            <InputText id=\"description\" value={tax.description} onChange={(e) => onInputChange(e, 'description')} required autoFocus className={classNames({ 'p-invalid': submitted && !tax.description })} />\r\n                            {submitted && !tax.price && <small className=\"p-invalid\">Name is required.</small>}\r\n                        </div>            \r\n            <div className=\"field\">\r\n                <label className=\"mb-3\">Tax Status</label>\r\n                <div className=\"formgrid grid\">\r\n                    <div className=\"field-radiobutton col-6\">\r\n                        <RadioButton inputId=\"status1\" name=\"status\" value={1} onChange={onStatusChange} checked={tax.status === 1} />\r\n                        <label htmlFor=\"status1\">Active</label>\r\n                    </div>\r\n                    <div className=\"field-radiobutton col-6\">\r\n                        <RadioButton inputId=\"status2\" name=\"status\" value={2} onChange={onStatusChange} checked={tax.status === 2} />\r\n                        <label htmlFor=\"status2\">Non Active</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default TaxUpdateDialog;\r\n"
        }
    ]
}