{
    "sourceFile": "pages/pages/tax/Dialogs/TaxCreateDialog.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1736822025826,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1736822025826,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Button } from 'primereact/button';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { classNames } from 'primereact/utils';\r\nimport { RadioButton } from 'primereact/radiobutton';\r\nimport { InputTextarea } from 'primereact/inputtextarea';\r\n\r\nconst TaxCreateDialog = ({ visible, tax, setTax, hideDialog, saveTax, submitted }) => {\r\n   \r\n    const onStatusChange = (e) => {\r\n        setTax(prevTax => ({\r\n            ...prevTax,\r\n            status: e.value === \"Active\" ? 1 : 2, \r\n        }));\r\n    };\r\n\r\n    const onInputChange = (e, name) => {\r\n        let val = (e.target && e.target.value.trim()); // Trim spasi di awal/akhir\r\n\r\n        let _tax = { ...tax };\r\n        if (name === 'tax_percentage') {\r\n            // Parse to float and ensure it's within range\r\n            const parsedVal = parseFloat(val) || 0;\r\n            if (parsedVal >= 0 && parsedVal <= 100) {\r\n                _tax[name] = parsedVal;\r\n            }\r\n        } else {\r\n            _tax[name] = val;\r\n        }\r\n        setTax(_tax);\r\n    };\r\n    const taxDialogFooter = (\r\n        <>\r\n            <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog} />\r\n            <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={saveTax} />\r\n        </>\r\n    );\r\n\r\n    return (\r\n        <Dialog visible={visible} style={{ width: '600px' }} header=\"Tax Details\" modal className=\"p-fluid\" footer={taxDialogFooter} onHide={hideDialog}>\r\n            <div className=\"field\">\r\n                <label htmlFor=\"tax\">Tax name</label>\r\n                <InputText\r\n                    id=\"tax\"\r\n                    value={tax.tax}\r\n                    placeholder='PPN'\r\n                    onChange={(e) => onInputChange(e, 'tax')}\r\n                    required\r\n                    autoFocus\r\n                    className={classNames({ 'p-invalid': submitted && !tax.tax })}\r\n                />\r\n                {submitted && !tax.tax && <small className=\"p-invalid\">Tax name is required. Please provide a valid name.</small>}\r\n            </div>\r\n            <div className=\"field\">\r\n                            <label htmlFor=\"tax_percentage\">Tax Percentage</label>\r\n                            <div className=\"p-inputgroup\" style={{ maxWidth: '200px' }}>\r\n                                <InputText\r\n                                    id=\"tax_percentage\"\r\n                                    value={tax.tax_percentage || ''}\r\n                                    onChange={(e) => onInputChange(e, 'tax_percentage')}\r\n                                    required\r\n                                    className={classNames({ 'p-invalid': submitted && (tax.tax_percentage < 0 || tax.tax_percentage > 100) })}\r\n                                />\r\n                                <span className=\"p-inputgroup-addon\">%</span>\r\n                            </div>\r\n                            {submitted && (tax.tax_percentage < 0 || tax.tax_percentage > 100) && (\r\n                                <small className=\"p-invalid\">Tax must be between 0% and 100%.</small>\r\n                            )}\r\n                        </div>\r\n\r\n            <div className=\"field\">\r\n                <label htmlFor=\"description\">Description</label>\r\n                <InputTextarea\r\n                    id=\"description\"\r\n                    value={tax.description}\r\n                    onChange={(e) => onInputChange(e, 'description')}\r\n                    required\r\n                    rows={3}\r\n                    autoFocus\r\n                    className={classNames({ 'p-invalid': submitted && !tax.description })}\r\n                />\r\n                {submitted && !tax.description && <small className=\"p-invalid\">Description is required. Please enter a tax description.</small>}\r\n            </div>\r\n\r\n           <div className=\"field-radiobutton\">\r\n                           <RadioButton inputId=\"statusActive\" name=\"status\" value=\"Active\" onChange={onStatusChange} checked={tax.status === 1} />\r\n                           <label htmlFor=\"statusActive\">Active</label>\r\n           \r\n                           <RadioButton inputId=\"statusInactive\" name=\"status\" value=\"Inactive\" onChange={onStatusChange} checked={tax.status === 2} />\r\n                           <label htmlFor=\"statusInactive\">Inactive</label>\r\n                       </div>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default TaxCreateDialog;\r\n"
        }
    ]
}