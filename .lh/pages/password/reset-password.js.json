{
    "sourceFile": "pages/password/reset-password.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1736741923652,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1736741923652,
            "name": "Commit-0",
            "content": "import getConfig from 'next/config';\r\nimport { useRouter } from 'next/router';\r\nimport React, { useContext, useState, useEffect } from 'react';\r\nimport AppConfig from '../../layout/AppConfig';\r\nimport { Checkbox } from 'primereact/checkbox';\r\nimport { Button } from 'primereact/button';\r\nimport { Password } from 'primereact/password';\r\nimport { LayoutContext } from '../../layout/context/layoutcontext';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { classNames } from 'primereact/utils';\r\nimport Cookies from 'js-cookie';\r\nimport axios from 'axios';\r\nimport Link from 'next/link';\r\n\r\nconst resetpassword = () => {\r\n    // const [token, setToken] = useState('');\r\n    const [new_password, setPassword] = useState('');\r\n    const { layoutConfig } = useContext(LayoutContext);\r\n    const router = useRouter();\r\n    const containerClassName = classNames('surface-ground flex align-items-center justify-content-center min-h-screen min-w-screen overflow-hidden', {'p-input-filled': layoutConfig.inputStyle === 'filled'});\r\n    const [notification, setNotification] = useState({\r\n        type: '', // 'success' or 'error'\r\n        message: ''\r\n    });\r\n    const { token } = router.query;\r\n\r\n    const handleForgot = async () => {\r\n        setNotification({\r\n            type: '',\r\n            message: ''\r\n        }); // Reset notification\r\n\r\n        try {\r\n            const response = await axios.post(`http://192.168.14.248:2356/api/auth/resetpassword?token=${token}`,  \r\n                { new_password },\r\n                {\r\n                    headers: {\r\n                        'X-Api-Key': '3f=Pr#g1@RU-nw=30'  // Adding the custom API key header\r\n                    }\r\n                }\r\n            );\r\n            \r\n            if (response.status === 200) {\r\n                // Anda dapat memeriksa respons dari server untuk pesan atau informasi tambahan jika diperlukan.\r\n                // const data = response.data;\r\n\r\n                // Redirect ke halaman tertentu setelah berhasil reset password\r\n                router.push('/accounts/tap/login');\r\n            } else {\r\n                await handleLoginError(response);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error during reset password', error);\r\n            setNotification({ type: 'error', message: 'An unexpected error occurred.' });\r\n        }\r\n    };\r\n\r\n    const handleLoginError = async (response) => {\r\n        try {\r\n            const errorData = await response.json();\r\n    \r\n            if (errorData.meta && !errorData.meta.status && errorData.meta.message) {\r\n                setNotification({\r\n                    type: 'error',\r\n                    message: errorData.meta.message\r\n                });\r\n            } else if (errorData.error) {\r\n                setNotification({\r\n                    type: 'error',\r\n                    message: errorData.error\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.error('Error parsing reset password response', error);\r\n            setNotification({\r\n                type: 'error',\r\n                message: 'An error occurred while processing the response.'\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={containerClassName}>\r\n            <div className=\"flex flex-column align-items-center justify-content-center\">\r\n                <div style={{ borderRadius: '56px', padding: '0.3rem', background: 'linear-gradient(180deg, var(--primary-color) 10%, rgba(33, 150, 243, 0) 30%)' }}>\r\n                    <div className=\"w-full surface-card py-8 px-5 sm:px-8\" style={{ borderRadius: '53px' }}>\r\n                        <div className=\"text-center mb-5\">\r\n                            <div className=\"text-900 text-3xl font-medium mb-3\">Reset password!</div>                           \r\n                            <span className=\"text-600 font-medium\">\r\n                            <div className={notification.type === 'error' ? 'alert alert-danger' : 'alert alert-success'}>\r\n                                {notification.message}\r\n                            </div>\r\n                            </span>\r\n                        </div>\r\n                       \r\n                        <div>\r\n                            <label htmlFor=\"email1\" className=\"block text-900 text-xl font-medium mb-2\">\r\n                                New password\r\n                            </label>\r\n                            \r\n                            <Password inputid=\"password1\" value={new_password} onChange={(e) => setPassword(e.target.value)} placeholder=\"Password\" toggleMask className=\"w-full mb-5\" inputClassName='w-full p-3 md:w-30rem'></Password>\r\n\r\n                            <Button className=\"w-full p-3 text-xl\" onClick={handleForgot}>\r\n                                 <span>Send</span>\r\n                            </Button>\r\n                            <Link href=\"/accounts/tap/register\">\r\n                                <div style={{ textAlign: 'center', marginTop: '2rem' }}>You Don't have account ?  \r\n                                <a className=\"font-medium no-underline cursor-pointer\" style={{ color: 'var(--primary-color)' }}>\r\n                                    Register?\r\n                                </a>\r\n                                </div>  \r\n                            </Link>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n    resetpassword.getLayout = function getLayout(page) {\r\n        return (\r\n            <React.Fragment>\r\n                {page}\r\n                <AppConfig simple />\r\n            </React.Fragment>\r\n        );\r\n    };\r\n    export default resetpassword;"
        }
    ]
}